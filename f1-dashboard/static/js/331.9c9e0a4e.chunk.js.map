{"version":3,"file":"static/js/331.9c9e0a4e.chunk.js","mappings":"+WAIMA,EAAS,GAETC,EAAO,CAACC,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,KA0D7D,EAzDkB,SAAH,GAAqG,IAAD,QAA/FC,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAACW,EAAI,EAAJA,KAAKC,EAAM,EAANA,OAAOC,EAAI,EAAJA,KAAKC,EAAI,EAAJA,KAAoB,GAAT,EAANC,OAAc,EAAPC,QAAO,EAACC,aAAAA,OAAW,IAAC,EAAAL,EAAM,MAACM,KAAAA,OAAI,IAAC,SAAM,EAACC,EAAS,EAATA,UAClG,GAAoCC,EAAAA,EAAAA,iBAAe,eAAlCC,GAAD,KAAgB,MAChC,GAA+BC,EAAAA,EAAAA,UAAStB,GAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAAiCF,EAAAA,EAAAA,UAAS,IAAG,eAAtCG,EAAS,KAACC,EAAY,MAC7BC,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IAAMO,EAAE,GACFC,EAAE,GACRnB,EAAKoB,SAAQ,SAAAC,GACTH,EAAEI,KAAKD,EAAEpB,IACTkB,EAAEG,KAAKD,EAAElB,GACb,IACAW,EAAY,CACRI,EAAAA,EACAC,EAAAA,GAER,GACJ,GAAE,CAAClB,EAAKE,EAAKH,KACbiB,EAAAA,EAAAA,YAAU,WAIED,EAHG,YAAPR,GAEIJ,EACaJ,EAAKuB,KAAI,SAAAF,GAAC,OAAEA,EAAEjB,EAAK,IAKvB,GACrB,GAAE,CAACJ,EAAKI,EAAKI,IACb,IAAMgB,EAAU,CAAC,CACbN,EAAEL,EAASK,EACXC,EAAEN,EAASM,EACXM,KAAM,UACNjB,KAAAA,IAIAO,EAAUW,SACVF,EAAQ,GAAGG,OAAS,CAACC,MAAMb,EAAWc,WAAY,WAAWC,kBAAmB1B,EAC5E2B,kBAAkB,EAClBtB,UAAAA,EACAuB,KAAKzB,EAAY,GAAG0B,KAAK1B,EAAY,KAE7C,IAAM2B,GAAQ,kBAAI3C,GAAM,IACpB4C,MAAM,CACN3C,MAAM,MAAD,OAA0B,QAA1B,EAAQU,EAAOC,GAAMiC,aAAK,QAAEjC,EAAI,QACrCkC,WAAU,EACNC,MAAMpC,EAAOC,IAEjBoC,MAAM,CACF/C,MAAM,MAAD,OAAyB,QAAzB,EAAOU,EAAOD,GAAMmC,aAAK,QAAEnC,EAAI,WAI5C,OAAQ,SAAC,IAAI,CAACD,KAAMwB,EAASgB,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQ2C,EAASS,kBAAkB,GAC1G,EC1DMrD,EAAS,GAETC,EAAO,CAACC,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,KAgE7D,EA/DkB,SAAH,GAA6E,IAAD,QAAvEC,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAACe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQL,EAAI,EAAJA,KAAKE,EAAI,EAAJA,KAAKD,EAAM,EAANA,OACvD,GAD6D,EAACM,KAAqB,EAATC,WACtCC,EAAAA,EAAAA,kBAAe,eAAlCC,GAAD,KAAgB,MAChC,GAA+BC,EAAAA,EAAAA,UAAStB,GAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAAiCF,EAAAA,EAAAA,UAAS,IAAG,eAA7B,KAAa,MAC7BK,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IAAMiC,EAAY5C,EAAKuB,KAAI,SAAA3B,GACvB,IAAMsB,EAAE,GACFC,EAAE,GAKR,OAJAd,EAAOT,GAAGwB,SAAQ,SAAAC,GACdH,EAAEI,KAAKD,EAAEpB,IACTkB,EAAEG,KAAKD,EAAElB,GACb,IACM,CACF0C,KAAKvC,EAAQV,GACbsB,EAAAA,EACAC,EAAAA,EACAM,KAAM,UAEd,IACAX,EAAY8B,EAChB,GACJ,GAAE,CAAC3C,EAAKE,EAAKH,IA4Bb,IAAMkC,GAAQ,kBAAI3C,GAAM,IACpB4C,MAAM,CACF3C,MAAM,MAAD,OAA0B,QAA1B,EAAQU,EAAOC,GAAMiC,aAAK,QAAEjC,EAAI,QACrC2C,WAAW,EACXR,MAAMpC,EAAOC,IAEjBoC,MAAM,CACF/C,MAAM,MAAD,OAAyB,QAAzB,EAAOU,EAAOD,GAAMmC,aAAK,QAAEnC,EAAI,WAG5C,OAAQ,SAAC,IAAI,CAACD,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQ2C,EAASS,kBAAkB,GAC3G,ECjEMrD,EAAW,GACXC,EAAO,CAACC,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,KAkD7D,EAjDc,SAAH,GAAkE,IAAD,IAA5DC,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAAEe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQL,EAAI,EAAJA,KAAKE,EAAI,EAAJA,KAAK4C,EAAI,EAAJA,KACpD,GADwD,EAACvC,MAC1BI,EAAAA,EAAAA,UAAStB,IAAS,eAA1CuB,EAAQ,KAACC,EAAW,MAC3BG,EAAAA,EAAAA,YAAU,WAEN,IAAM2B,EAAY5C,EAAKuB,KAAI,SAAA3B,GACvB,IAAMsB,EAAE,GACFC,EAAE,GACF6B,EAAE,GAMR,OALA3C,EAAOT,GAAGwB,SAAQ,SAAAC,GACdH,EAAEI,KAAKD,EAAEpB,IACTkB,EAAEG,KAAKD,EAAElB,IACT6C,EAAE1B,KAAKD,EAAE0B,GACb,IACM,CACFF,KAAKvC,EAAQV,GACbsB,EAAAA,EACAC,EAAAA,EACA6B,EAAAA,EAER,IACAlC,EAAY8B,EAChB,GAAE,CAAC3C,EAAKE,EAAK4C,EAAK/C,IAClB,IAAMwB,GAAUyB,EAAAA,EAAAA,UAAQ,WACpB,OAAOpC,EAASU,KAAI,SAAAF,GAAC,yBACdA,GAAC,IACJI,KAAM,YACNI,WAAY,WACZrB,KAAM,UACNmB,OAAO,CAACuB,KAAK,IAAE,GAEvB,GAAE,CAACrC,IAGH,OAAQ,SAAC,IAAI,CAACb,KAAMwB,EAASgB,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,QAAM,kBAAMA,GAAM,IACjF4D,MAAO,CACHZ,MAAO,CACH/C,MAAO,CAACC,KAAMQ,IAElBkC,MAAO,CACH3C,MAAO,CAACC,KAAMU,IAElBiD,MAAO,CACH5D,MAAO,CAACC,KAAMsD,OAGvBJ,kBAAkB,GAEzB,ECjDMrD,EAAW,GACX+D,EAAW,CAAC7D,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,IAC7DuD,UAAU,UACVC,SAAS,SACTC,aAAa,0BACbC,KAAK,CAACC,SAAS,kBAgDnB,EA7Cc,SAAH,GAAiE,IAAD,IAA3D1D,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAAEe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQqD,EAAa,EAAbA,cAC1C,GADuD,EAACnD,MACzBI,EAAAA,EAAAA,UAAStB,IAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAA2BF,EAAAA,EAAAA,UAASyC,GAAW,eAAxC9D,EAAM,KAACqE,EAAS,MACvB3C,EAAAA,EAAAA,YAAU,WACN,IAAM2B,EAAY5C,EAAKuB,KAAI,SAAA3B,GACvB,IAAMiE,EAAaF,EAAcpC,KAAI,SAAAuC,GAAC,MAAI,CAAC1B,MAAM0B,EAAGC,OAAO,GAAG,IAM9D,OALA1D,EAAOT,GAAGwB,SAAQ,SAAAC,GACdwC,EAAWzC,SAAQ,SAAC0C,GAChBA,EAAEC,OAAOzC,KAAKD,EAAEyC,EAAE1B,OACtB,GACJ,IACO,CACHX,KAAM,QACNoB,KAAKvC,EAAQV,GACbiE,WAAAA,EACAlC,OAAQ,CACJuB,KAAM,EACNc,KAAM,CACFpC,MAAO,QACPa,MAAO,KAIvB,IACA3B,EAAY8B,EAChB,GAAE,CAACe,EAAc3D,KACjBiB,EAAAA,EAAAA,YAAU,WACN,IAAM1B,GAAM,UAAO8D,GACnBM,EAAcvC,SAAQ,SAAC0C,EAAEG,GACrB1E,EAAO,QAAD,OAAS0E,IAAOC,IACtB3E,EAAO,QAAD,OAAS0E,IAAOC,GAC1B,IACAN,EAAUrE,EACd,GAAE,CAACoE,IACH,IAAMO,EAAO,WAAH,MAAU,CAChBC,UAAS,EACTC,UAAS,EACTC,UAAU,QACVC,QAAQ,EACX,EAED,OAAQ,SAAC,IAAI,CAACtE,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQA,EAAQoD,kBAAkB,GAE1G,ECrDa4B,EAAM,WAIf,SAASC,EAAKC,GAGV,OADQC,EAAUD,GACTlD,KAAI,SAASoD,GAAM,OAAOC,EAAAA,IAAOD,GAAOF,EAAE/C,MAAQ,GAC/D,CAEA,SAASgD,EAAUD,GACf,OAAOG,EAAAA,IAASH,EAAE,GAAG/C,QAAQH,KAAI,SAAS0C,GACtC,OAAOQ,EAAElD,KAAI,SAASoD,GAAM,OAAOA,EAAIV,EAAI,GAC/C,GACJ,CAEA,SAASY,EAAIJ,EAAEK,GACX,OAAOL,EAAElD,KAAI,SAASoD,GAClB,OAAOD,EAAUI,GAAGvD,KAAI,SAASwD,GAC7B,OAAOH,EAAAA,IAAOA,EAAAA,IAAOD,EAAII,GAAKxD,KAAI,SAASyD,GACvC,OAAOA,EAAE,GAAGA,EAAE,EAClB,IACJ,GACJ,GACJ,CAQA,SAASC,EAAMhB,EAAEiB,GACb,OAAON,EAAAA,IAASX,GAAG1C,KAAI,SAASoD,GAC5B,OAAOC,EAAAA,IAASM,GAAG3D,KAAI,WAAY,OAAO,CAAG,GACjD,GACJ,CAgCA,SAAS4D,EAAIjE,EAAEC,GAEX,OADAiE,QAAQC,OAAOnE,EAAEQ,SAAWP,EAAEO,OAAQ,oBAC/BkD,EAAAA,IAAO1D,EAAEC,GAAGI,KAAI,SAASyD,GAC5B,MAAqB,kBAAVA,EAAE,GAAyBA,EAAE,GAAGA,EAAE,GACjCJ,EAAAA,IAAOI,EAAE,GAAGA,EAAE,IAAIzD,KAAI,SAAS+D,GAAI,OAAOA,EAAE,GAAGA,EAAE,EAAI,GACrE,GACJ,CAzEAC,KAAKC,MAiFL,SAAef,EAAGgB,EAAQD,GAEtB,GAAIC,EAAO,CACP,IAAIC,EAAIlB,EAAKC,GACbA,EAAIA,EAAElD,KAAI,SAASoD,GAAM,OAAOQ,EAAIR,EAAKe,EAAI,GACjD,CAEA,GAAIF,EAAM,CACN,IAAIG,EAtCZ,SAAalB,GACDD,EAAKC,GACb,OAGUmB,EAHEpB,EAOhB,SAAaC,EAAEK,GACX,OAAOF,EAAAA,IAAOH,EAAEK,GAAGvD,KAAI,SAASyD,GAC5B,MAAqB,kBAAVA,EAAE,GAAyBA,EAAE,GAAGA,EAAE,GACtCJ,EAAAA,IAAOI,EAAE,GAAGA,EAAE,IAAIzD,KAAI,SAAS+D,GAAI,OAAOA,EAAE,GAAGA,EAAE,EAAI,GAChE,GACJ,CAZqBO,CAAIpB,EAAEA,IAIhBmB,EAAErE,KAAI,SAASL,GAAI,OAAO4E,KAAKC,KAAK7E,EAAI,IADnD,IAAc0E,CAFd,CAmCgBI,CAAIvB,GACZA,EAAIA,EAAElD,KAAI,SAASoD,GAAM,OAfpBzD,EAe+ByD,EAf7BxD,EAekCwE,EAd7CP,QAAQC,OAAOnE,EAAEQ,SAAWP,EAAEO,OAAQ,oBAC/BkD,EAAAA,IAAO1D,EAAEC,GAAGI,KAAI,SAASyD,GAAI,OAAc,IAAPA,EAAE,GAASA,EAAE,GAAIA,EAAE,GAAK,CAAG,IAF1E,IAAa9D,EAAEC,CAesC,GACjD,CACA,OAAOsD,CACX,EA5FAc,KAAKU,IAuXL,SAAaxB,EAAEyB,GACX,IAAIC,EAzRR,SAAaC,GACT,IAAIC,EAEAC,EAAOR,KAAKS,IAAI,GAAG,IACnBC,EAAY,MAAOF,EACnBG,EAAQ,GACRC,EAAI,EACJzC,EAAI,EACJiB,EAAI,EACJpB,EAAI,EACJjE,EAAI,EAEJ8G,EAAIP,EAAE7E,KAAI,SAASoD,GAAM,OAAOA,EAAIiC,MAAM,EAAI,IAC9ClB,EAAIiB,EAAEjF,OACNmF,EAAIF,EAAE,GAAGjF,OAEb0D,QAAQC,OAAOK,GAAKmB,EAAG,+BAEvB,IAAIC,EAAIlC,EAAAA,IAASiC,GAAGtF,KAAI,WAAY,OAAO,CAAG,IAC1CwF,EAAInC,EAAAA,IAASiC,GAAGtF,KAAI,WAAY,OAAO,CAAG,IAC1CyD,EAAIC,EAAM4B,EAAEA,GAEhB,SAASG,EAAOC,EAAEnH,GAGd,OAFAmH,EAAInB,KAAKoB,IAAID,KACbnH,EAAIgG,KAAKoB,IAAIpH,IAEFmH,EAAEnB,KAAKC,KAAK,EAAKjG,EAAEA,EAAEmH,EAAEA,GACnB,IAANnH,EACEmH,EACJnH,EAAEgG,KAAKC,KAAK,EAAKkB,EAAEA,EAAEnH,EAAEA,EAClC,CAGA,IAAIqH,EAAI,EACJC,EAAI,EACJC,EAAI,EACJnG,EAAI,EACJC,EAAI,EACJ6B,EAAI,EACJ2C,EAAI,EAER,IAAK1B,EAAE,EAAGA,EAAI4C,EAAG5C,IACjB,CAII,IAHA6C,EAAE7C,GAAImD,EACNzB,EAAG,EACH9F,EAAGoE,EAAE,EACAiB,EAAEjB,EAAGiB,EAAIQ,EAAGR,IACbS,GAAMgB,EAAEzB,GAAGjB,GAAG0C,EAAEzB,GAAGjB,GACvB,GAAI0B,GAAKa,EACLY,EAAG,OAQH,IALAD,EAAGR,EAAE1C,GAAGA,GACRmD,EAAGtB,KAAKC,KAAKJ,GACTwB,GAAK,IAAKC,GAAIA,GAClBC,EAAGF,EAAEC,EAAEzB,EACPgB,EAAE1C,GAAGA,GAAGkD,EAAEC,EACLlC,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACjB,CAEI,IADAS,EAAG,EACE7B,EAAEG,EAAGH,EAAI4B,EAAG5B,IACb6B,GAAKgB,EAAE7C,GAAGG,GAAG0C,EAAE7C,GAAGoB,GAEtB,IADAiC,EAAGxB,EAAE0B,EACAvD,EAAEG,EAAGH,EAAI4B,EAAG5B,IACb6C,EAAE7C,GAAGoB,IAAIiC,EAAER,EAAE7C,GAAGG,EACxB,CAIJ,IAFA8C,EAAE9C,GAAImD,EACNzB,EAAG,EACET,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACbS,GAAOgB,EAAE1C,GAAGiB,GAAGyB,EAAE1C,GAAGiB,GACxB,GAAIS,GAAKa,EACLY,EAAG,MAEP,CAMI,IALAD,EAAGR,EAAE1C,GAAGA,EAAE,GACVmD,EAAGtB,KAAKC,KAAKJ,GACTwB,GAAK,IAAKC,GAAIA,GAClBC,EAAGF,EAAEC,EAAIzB,EACTgB,EAAE1C,GAAGA,EAAE,GAAKkD,EAAEC,EACTlC,EAAErF,EAAGqF,EAAI2B,EAAG3B,IAAK4B,EAAE5B,GAAIyB,EAAE1C,GAAGiB,GAAGmC,EACpC,IAAKnC,EAAErF,EAAGqF,EAAIQ,EAAGR,IACjB,CAEI,IADAS,EAAE,EACG7B,EAAEjE,EAAGiE,EAAI+C,EAAG/C,IACb6B,GAAMgB,EAAEzB,GAAGpB,GAAG6C,EAAE1C,GAAGH,GACvB,IAAKA,EAAEjE,EAAGiE,EAAI+C,EAAG/C,IACb6C,EAAEzB,GAAGpB,IAAI6B,EAAEmB,EAAEhD,EACrB,CACJ,EACA3C,EAAG2E,KAAKoB,IAAIH,EAAE9C,IAAI6B,KAAKoB,IAAIJ,EAAE7C,KACvB/C,IACFA,EAAEC,EACV,CAGA,IAAK8C,EAAI4C,EAAE,GAAU,IAAP5C,EAAUA,IAAK,EAC7B,CACI,GAAU,IAANmD,EACJ,CAEI,IADAC,EAAGD,EAAET,EAAE1C,GAAGA,EAAE,GACPiB,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACbF,EAAEE,GAAGjB,GAAG0C,EAAE1C,GAAGiB,GAAGmC,EACpB,IAAKnC,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACjB,CAEI,IADAS,EAAE,EACG7B,EAAEjE,EAAGiE,EAAI+C,EAAG/C,IACb6B,GAAKgB,EAAE1C,GAAGH,GAAGkB,EAAElB,GAAGoB,GACtB,IAAKpB,EAAEjE,EAAGiE,EAAI+C,EAAG/C,IACbkB,EAAElB,GAAGoB,IAAKS,EAAEX,EAAElB,GAAGG,EACzB,CACJ,CACA,IAAKiB,EAAErF,EAAGqF,EAAI2B,EAAG3B,IAEbF,EAAEf,GAAGiB,GAAK,EACVF,EAAEE,GAAGjB,GAAK,EAEde,EAAEf,GAAGA,GAAK,EACVmD,EAAGN,EAAE7C,GACLpE,EAAGoE,CACP,CAGA,IAAKA,EAAE4C,EAAE,GAAU,IAAP5C,EAAUA,IAAK,EAC3B,CAGI,IAFApE,EAAGoE,EAAE,EACLmD,EAAGL,EAAE9C,GACAiB,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACbyB,EAAE1C,GAAGiB,GAAK,EACd,GAAU,IAANkC,EACJ,CAEI,IADAC,EAAGV,EAAE1C,GAAGA,GAAGmD,EACNlC,EAAErF,EAAGqF,EAAI2B,EAAG3B,IACjB,CAEI,IADAS,EAAE,EACG7B,EAAEjE,EAAGiE,EAAI4B,EAAG5B,IAAK6B,GAAKgB,EAAE7C,GAAGG,GAAG0C,EAAE7C,GAAGoB,GAExC,IADAiC,EAAGxB,EAAE0B,EACAvD,EAAEG,EAAGH,EAAI4B,EAAG5B,IAAK6C,EAAE7C,GAAGoB,IAAIiC,EAAER,EAAE7C,GAAGG,EAC1C,CACA,IAAKiB,EAAEjB,EAAGiB,EAAIQ,EAAGR,IAAKyB,EAAEzB,GAAGjB,GAAK0C,EAAEzB,GAAGjB,GAAGmD,CAC5C,MAEI,IAAKlC,EAAEjB,EAAGiB,EAAIQ,EAAGR,IAAKyB,EAAEzB,GAAGjB,GAAK,EACpC0C,EAAE1C,GAAGA,IAAM,CACf,CAIA,IADAqC,GAAWpF,EACN4C,EAAE+C,EAAE,GAAU,IAAP/C,EAAUA,IAAK,EAEvB,IAAK,IAAIwD,EAAU,EAAGA,EAAYb,EAAOa,IACzC,CACI,IAAIC,GAAmB,EACvB,IAAK1H,EAAEiE,GAAU,IAAPjE,EAAUA,IAAK,EACzB,CACI,GAAIiG,KAAKoB,IAAIJ,EAAEjH,KAAOyG,EAAK,CACvBiB,GAAkB,EAClB,KACJ,CACA,GAAIzB,KAAKoB,IAAIH,EAAElH,EAAE,KAAOyG,EACpB,KACR,CACA,IAAKiB,EAAiB,CAElBb,EAAG,EACHf,EAAG,EACH,IAAI6B,EAAI3H,EAAE,EACV,IAAKoE,EAAGpE,EAAGoE,EAAEH,EAAE,IAEXqD,EAAGxB,EAAEmB,EAAE7C,GACP6C,EAAE7C,GAAIyC,EAAEI,EAAE7C,KACN6B,KAAKoB,IAAIC,IAAMb,IAJLrC,IAWd,IAJAoD,EAAGL,EAAOG,EADVC,EAAGL,EAAE9C,IAEL8C,EAAE9C,GAAIoD,EACNX,EAAGU,EAAEC,EACL1B,GAAIwB,EAAEE,EACDnC,EAAE,EAAGA,EAAIQ,EAAGR,IAEb/D,EAAGwF,EAAEzB,GAAGsC,GACRxE,EAAG2D,EAAEzB,GAAGjB,GACR0C,EAAEzB,GAAGsC,GAAOrG,EAAEuF,EAAG1D,EAAE2C,EACnBgB,EAAEzB,GAAGjB,IAAM9C,EAAEwE,EAAG3C,EAAE0D,CAG9B,CAGA,GADA1D,EAAG+D,EAAEjD,GACDjE,IAAKiE,EAAE,CAEP,GAAId,EAAE,EAGF,IADA+D,EAAEjD,IAAKd,EACFkC,EAAE,EAAGA,EAAI2B,EAAG3B,IACbF,EAAEE,GAAGpB,IAAMkB,EAAEE,GAAGpB,GAExB,KACJ,CAkBA,IAhBAsB,QAAQC,OAAOiC,EAAYb,EAAM,EAAG,0BAGpCvF,EAAG6F,EAAElH,GAKLuH,EAAGJ,EADHG,KAHAhG,EAAG4F,EAAEjD,EAAE,IAGAd,IAAI7B,EAAE6B,KAFboE,EAAGN,EAAEhD,EAAE,KACPuD,EAAGP,EAAEhD,MACkBsD,EAAEC,KAAK,EAAIA,EAAElG,GACxB,GAERgG,EADAA,EAAI,IACCjG,EAAE8B,IAAI9B,EAAE8B,GAAGqE,GAAGlG,GAAGgG,EAAEC,GAAGC,IAAInG,IAE1BA,EAAE8B,IAAI9B,EAAE8B,GAAGqE,GAAGlG,GAAGgG,EAAEC,GAAGC,IAAInG,EAEnCwF,EAAG,EACHf,EAAG,EACE1B,EAAEpE,EAAE,EAAGoE,EAAGH,EAAE,EAAGG,IACpB,CAaI,IAZAmD,EAAIN,EAAE7C,GACN9C,EAAI4F,EAAE9C,GACNoD,EAAI1B,EAAEyB,EACNA,GAAIV,EACJ1D,EAAIgE,EAAOG,EAAEE,GACbP,EAAE7C,EAAE,GAAKjB,EAGTmE,EAAIjG,GAFJwF,EAAIS,EAAEnE,GAEEoE,GADRzB,EAAI0B,EAAErE,GAENoE,GAAKlG,EAAEyE,EAAEyB,EAAEV,EACXW,EAAIlG,EAAEwE,EACNxE,GAAMuF,EACDxB,EAAG,EAAGA,EAAI2B,EAAG3B,IAEdhE,EAAI8D,EAAEE,GAAGjB,EAAE,GACXjB,EAAIgC,EAAEE,GAAGjB,GACTe,EAAEE,GAAGjB,EAAE,GAAM/C,EAAEwF,EAAE1D,EAAE2C,EACnBX,EAAEE,GAAGjB,IAAO/C,EAAEyE,EAAE3C,EAAE0D,EAQtB,IANA1D,EAAIgE,EAAOG,EAAEE,GACbN,EAAE9C,EAAE,GAAKjB,EAGTmE,GAFAT,EAAIS,EAAEnE,GAEAoE,GADNzB,EAAI0B,EAAErE,GACI7B,EACVD,GAAKyE,EAAEyB,EAAEV,EAAEvF,EACN+D,EAAG,EAAGA,EAAIQ,EAAGR,IAEd/D,EAAIwF,EAAEzB,GAAGjB,EAAE,GACXjB,EAAI2D,EAAEzB,GAAGjB,GACT0C,EAAEzB,GAAGjB,EAAE,GAAM9C,EAAEuF,EAAE1D,EAAE2C,EACnBgB,EAAEzB,GAAGjB,IAAO9C,EAAEwE,EAAE3C,EAAE0D,CAE1B,CACAI,EAAEjH,GAAK,EACPiH,EAAEhD,GAAKqD,EACPJ,EAAEjD,GAAK5C,CACX,CAKJ,IAAK+C,EAAE,EAAEA,EAAE8C,EAAErF,OAAQuC,IACb8C,EAAE9C,GAAKqC,IAAMS,EAAE9C,GAAK,GAG5B,IAAKA,EAAE,EAAGA,EAAG4C,EAAG5C,IAEZ,IAAKiB,EAAEjB,EAAE,EAAGiB,GAAK,EAAGA,IAChB,GAAI6B,EAAE7B,GAAK6B,EAAE9C,GAAG,CAKZ,IAHAyC,EAAIK,EAAE7B,GACN6B,EAAE7B,GAAK6B,EAAE9C,GACT8C,EAAE9C,GAAKyC,EACF5C,EAAE,EAAEA,EAAE6C,EAAEjF,OAAOoC,IAAOuC,EAAOM,EAAE7C,GAAGG,GAAI0C,EAAE7C,GAAGG,GAAK0C,EAAE7C,GAAGoB,GAAIyB,EAAE7C,GAAGoB,GAAKmB,EACxE,IAAKvC,EAAE,EAAEA,EAAEkB,EAAEtD,OAAOoC,IAAOuC,EAAOrB,EAAElB,GAAGG,GAAIe,EAAElB,GAAGG,GAAKe,EAAElB,GAAGoB,GAAIF,EAAElB,GAAGoB,GAAKmB,EACxEpC,EAAIiB,CACR,CAGR,MAAO,CAAEuC,EAAEd,EAAGe,EAAEX,EAAGnB,EAAEZ,EACzB,CAGc2C,CAAIlD,GACVgD,EAAItB,EAAIsB,EACRC,EAlWR,SAAcjD,GACV,OAAOG,EAAAA,IAASH,EAAE/C,QAAQH,KAAI,SAAS0C,GACnC,OAAOW,EAAAA,IAASH,EAAE/C,QAAQH,KAAI,SAAS2D,GAAI,OAAQjB,IAAMiB,EAAKT,EAAER,GAAK,CAAG,GAC5E,GACJ,CA8VY2D,CAAKzB,EAAIuB,GACb9B,EAAIO,EAAIP,EAGRiC,EAAOhD,EAAIJ,EAAEmB,GACbkC,EAAQjD,EAAI4C,EAAEC,GAGdK,EA9VR,SAAetD,EAAEpD,GACb,OAAOoD,EAAElD,KAAI,SAASoD,GAClB,OAAOA,EAAIpD,KAAI,SAASL,GAAI,OAAQA,EAAIG,EAAK,EAAIH,CAAG,GACxD,GACJ,CA0Ve8G,CAAM7C,EAAI0C,EAAKC,GAAQ,OAC9BG,EAAOhD,EAAM8C,EAAKrG,OAAQqG,EAAK,GAAGrG,QACtC0D,QAAQC,OA1VZ,SAAcZ,EAAEK,GACZ,OAAOF,EAAAA,IAAOH,EAAEK,GAAGvD,KAAI,SAASyD,GAC5B,OAAOJ,EAAAA,IAAOI,EAAE,GAAGA,EAAE,IAAIzD,KAAI,SAAS+D,GAAI,OAAOA,EAAE,KAAOA,EAAE,EAAI,GACpE,IAAG/D,KAAI,SAASoD,GACZ,OAAOA,EAAIuD,QAAO,SAAShH,EAAEC,GAAI,OAAOD,EAAEC,CAAG,GACjD,IAAG+G,QAAO,SAAShH,EAAEC,GAAI,OAAOD,EAAEC,CAAG,GACzC,CAoVmBgH,CAAKJ,EAAKE,GAAO,sCAEhC,IADA,IAAIG,EAAU,GACLC,EAAK,EAAGA,EAAInC,EAAKmC,IACtBD,EAAQ9G,KAAK+G,GAEjB,IAAK,IAAIpE,KAAKkC,EAAIuB,EACd,IAASW,EAAK,EAAGA,EAAInC,EAAKmC,IACtB,GAAIlC,EAAIuB,EAAEzD,IAAIkC,EAAIuB,EAAEU,EAAQC,IAAO,CAC/BD,EAAQC,GAAOC,SAASrE,GACxB,KACJ,CAGR,MAAO,CAAC6D,EAAMlC,EAAEwC,EAAQV,EAC5B,CACJ,ECjZMpI,EAAW,GACX+D,EAAW,CAAC7D,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,KAG3DwI,EAAM,EA4EZ,EA1Ec,SAAH,GAAiE,IAAD,IAA3DvI,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAAEe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQqD,EAAa,EAAbA,cAC1C,GADuD,EAACnD,MACzBI,EAAAA,EAAAA,UAAStB,IAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAA2BF,EAAAA,EAAAA,UAASyC,GAAW,eAAxC9D,EAAM,KAACqE,EAAS,KACvB,GAAoClD,EAAAA,EAAAA,iBAAe,eAAlCC,GAAD,KAAgB,MAmEhC,OAlEAM,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IACI,IAAM6H,EAAS,GACTC,EAAa,GACnBzI,EAAKoB,SAAQ,SAACxB,EAAG8I,GACbD,EAAWC,GAAM,GACjBrI,EAAOT,GAAGwB,SAAQ,SAAAC,GACd,IAAIsH,EAAOhF,EAAcpC,KAAI,SAACuC,GAAC,OAAMzC,EAAEyC,EAAE,IACzC2E,EAAWC,GAAIpH,KAAKkH,EAAO9G,QAC3B8G,EAAOlH,KAAKqH,EAChB,GACJ,IAEA,MA6DhB,SAAsBH,EAAO3E,GAEzB,IAAIoC,EAAM,IAAI1B,EAEVqE,EAAS3C,EAAIT,MAAMgD,GAAQ,GAAM,GAIjCK,EAAK5C,EAAIA,IAAI2C,EAAOL,GAEpBnC,EAAIyC,EAAG,GACPC,EAAID,EAAG,GACPE,EAAWF,EAAG,GACdnB,EAAImB,EAAG,GACXzD,QAAQ4D,IAAIF,GACZ,IAAIG,EAAWT,EAAOjH,KAAI,SAACF,EAAE4C,GACzB,IAAMiF,GAAKC,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAA6H,GAAG,OAAEhD,EAAEnC,GAAG8E,EAASK,GAAK,IAEtD,OADAF,EAAGlJ,KAAOqB,EACH6H,CACX,IACIG,GAASC,EAAAA,EAAAA,KAASL,GAAU,SAAA5H,GAAC,OAAIA,EAAE,EAAE,IACrCkI,GAASD,EAAAA,EAAAA,KAASL,GAAU,SAAA5H,GAAC,OAAIA,EAAE,EAAE,IAEnCmI,EAAO,CAAC,EAAE,GACZC,EAAO,CAAC,CAAC,GAAGC,KAAU,CAAC,GAAGA,MACxBC,EAAU9F,EAAWtC,KAAI,SAAUqI,EAAK3F,GAC1C,IAAI4F,EAAQ,CAACL,GAAKL,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAA6H,GAAG,OAAEN,EAAE7E,GAAG8E,EAASK,GAAK,KAO7D,OANAK,EAAKrI,SAAQ,WAAW0I,GAAQ,IAAD,eAAV9E,GAAD,KAAE,MACZ+E,EAAKjE,KAAKoB,IAAI2C,EAAM,GAAGC,GAAMD,EAAM,GAAGC,IACxCC,EAAG/E,IACHyE,EAAKK,GAAQ,CAAC7F,EAAE8F,GACxB,IACAF,EAAMhH,KAAO+G,EACNC,CACX,IACAF,EAAQF,EAAK,GAAG,IAAIO,KAAI,EACxBL,EAAQF,EAAK,GAAG,IAAIQ,KAAI,EAExB,IAAIC,EAAiBpE,KAAKC,MAAKoE,EAAAA,EAAAA,KAAM,CACjCC,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,QACjCY,EAAAA,EAAAA,KAAMR,GAAQ,SAAAtI,GAAC,OAAE+I,EAASZ,EAAK,CAACnI,EAAE,GAAG,GAAGA,EAAE,GAAG,IAAI,KACpDsI,EAAQvI,SAAQ,SAAA+F,GACZA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAG+C,EAClB/C,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAG+C,CACtB,IAEA,IAAMG,GAAgBC,EAAAA,EAAAA,KAAM5C,GAAE,SAACT,EAAEhD,GAAC,OAAGgD,EAAEhD,EAAE,IAEzC,IAAMsG,GAAapB,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAAF,GAAC,OAAEqG,EAAEqB,EAAS1H,IAAI0H,EAAS1H,IAAIgJ,CAAa,IAElF,MAAO,CAACpB,SAAAA,EAASU,QAAAA,EAAQY,WAAAA,EAC7B,CAnHuDC,CAAahC,EAAQ7E,GAArDsF,EAAQ,EAARA,SAAUU,EAAO,EAAPA,QAAQY,EAAU,EAAVA,WACnB3H,EAAY5C,EAAKuB,KAAI,SAAC3B,EAAG8I,GAC3B,MAAO,CACHjH,KAAM,WACNjB,KAAM,UACNqC,KAAMvC,EAAQV,GACdsB,EAAGuH,EAAWC,GAAInH,KAAI,SAAA0C,GAAC,OAAIgF,EAAShF,GAAG,EAAE,IACzC9C,EAAGsH,EAAWC,GAAInH,KAAI,SAAA0C,GAAC,OAAIgF,EAAShF,GAAG,EAAE,IAEjD,IACAnD,EAAY8B,GAEZ,IAAMrD,GAAM,kBAAO8D,GAAU,IACzBd,MAAO,CACH/C,MAAO,CAACC,KAAK,QAAD,OAAUqG,KAAK2E,MAAoB,IAAdF,EAAW,IAAS,GAAE,QAE3DpI,MAAO,CACH3C,MAAO,CAACC,KAAK,QAAD,OAAUqG,KAAK2E,MAAoB,IAAdF,EAAW,IAAS,GAAE,UAG/DhL,EAAOmL,OAASf,EAAQpI,KAAI,SAAA4F,GAAC,MAAG,CAC5B1F,KAAM,OACNkJ,GAAIxD,EAAE,GAAG,GACTyD,GAAIzD,EAAE,GAAG,GACT0D,GAAI1D,EAAE,GAAG,GACT2D,GAAI3D,EAAE,GAAG,GACZ,IACD5H,EAAOwL,YAAcpB,EAAQpI,KAAI,SAAA4F,GAAC,MAAG,CACjCjG,EAAGiG,EAAE,GAAG,GACRhG,EAAGgG,EAAE,GAAG,GACR1H,KAAM0H,EAAEtE,KACRmI,QAAQ,SACRC,QAAQ,SACRC,KAAK,CAACtJ,MAAOuF,EAAE6C,KAAK7C,EAAE8C,IAAK,MAAM,SACpC,IAEDrG,EAAUrE,EAGd,CAFC,MAAMuH,GACHhG,EAAY,GAChB,CACJ,GACJ,GAAE,CAAC6C,EAAc3D,KAWT,SAAC,IAAI,CAACA,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQA,EAAQoD,kBAAkB,GAE1G,EAIA,SAASyH,EAASnD,EAAEnH,GAChB,OAAOgG,KAAKC,MAAMkB,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,IACjE,CCpFA,IAAMR,EAAW,GACX+D,EAAW,CAAC7D,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,KAG3DwI,EAAM,EAyFZ,EAvFc,SAAH,GAAiE,IAAD,IAA3DvI,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAAEe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQqD,EAAa,EAAbA,cAC1C,GADuD,EAACnD,MACzBI,EAAAA,EAAAA,UAAStB,IAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAA2BF,EAAAA,EAAAA,UAASyC,GAAW,eAAxC9D,EAAM,KAACqE,EAAS,KACvB,GAAoClD,EAAAA,EAAAA,iBAAe,eAAlCC,GAAD,KAAgB,MAgFhC,OA/EAM,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IACI,IAAIwK,EAAcnL,EAAKuB,KAAI,SAAA3B,GAAC,OAAEU,EAAQV,EAAE,IACpCwL,GAAMC,EAAAA,EAAAA,KAAMrL,GAAK,SAAAJ,GAAC,OAAES,EAAOT,GAAG8B,MAAM,IAWlC8G,EAAS,GACfxI,EAAKoB,SAAQ,SAACxB,EAAG8I,GAEb,IADA,IAAI4C,EAAKjL,EAAOT,GAAG,aAEf,IAAIyB,EAAIiK,EAAGrH,GACP0E,EAAOhF,EAAcpC,KAAI,SAACuC,GAAC,OAAMzC,EAAEyC,EAAE,IACzC0E,EAAOlH,KAAKqH,EAChB,EAJS1E,EAAE,EAAGA,EAAEmH,EAAInH,IAAK,GAK7B,IAEA,MA+DhB,SAAsBuE,EAAO3E,EAAW0H,EAASH,GAQ7C,IANA,IAAInF,EAAM,IAAI1B,EAEViH,EAAUvF,EAAIT,MAAMgD,GAAQ,GAAM,GAGlCI,EAAS,GAAE,cAEX,IADwC,IAAD,cAEnCA,EAAO6C,EAAGL,EAAInH,GAAKsH,EAAQhK,KAAI,SAACoE,EAAE+F,GAAE,OAAGF,EAAQE,EAAGN,EAAInH,GAAGwH,EAAG,GAChE,EAFSxH,EAAE,EAAGA,EAAImH,EAAKnH,IAAG,IAG9B,EAJSwH,EAAG,EAAGA,EAAG5H,EAAWnC,OAAQ+J,IAAI,KASzC,IAAI5C,EAAK5C,EAAIA,IAAI2C,EAAOL,GAEpBnC,EAAIyC,EAAG,GACPC,EAAID,EAAG,GACPE,EAAWF,EAAG,GACdnB,EAAImB,EAAG,GACXzD,QAAQ4D,IAAIF,GACZ,IAAIG,EAAWL,EAAOrH,KAAI,SAACF,EAAE4C,GAEzB,OADWkF,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAA6H,GAAG,OAAEhD,EAAEnC,GAAG8E,EAASK,GAAK,GAE1D,IACIC,GAASC,EAAAA,EAAAA,KAASL,GAAU,SAAA5H,GAAC,OAAIA,EAAE,EAAE,IACrCkI,GAASD,EAAAA,EAAAA,KAASL,GAAU,SAAA5H,GAAC,OAAIA,EAAE,EAAE,IAEnCmI,EAAO,CAAC,EAAE,GACZC,EAAO,CAAC,CAAC,GAAGC,KAAU,CAAC,GAAGA,MACxBC,EAAU4B,EAAQhK,KAAI,SAAUqI,EAAK3F,GACvC,IAAI4F,EAAQ,CAACL,GAAKL,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAA6H,GAAG,OAAEN,EAAE7E,GAAG8E,EAASK,GAAK,KAO7D,OANAK,EAAKrI,SAAQ,WAAW0I,GAAQ,IAAD,eAAV9E,GAAD,KAAE,MACZ+E,EAAKjE,KAAKoB,IAAI2C,EAAM,GAAGC,GAAMD,EAAM,GAAGC,IACxCC,EAAG/E,IACHyE,EAAKK,GAAQ,CAAC7F,EAAE8F,GACxB,IACAF,EAAMhH,KAAO+G,EACNC,CACX,IACAF,EAAQF,EAAK,GAAG,IAAIO,KAAI,EACxBL,EAAQF,EAAK,GAAG,IAAIQ,KAAI,EAExB,IAAIC,EAAiBpE,KAAKC,MAAKoE,EAAAA,EAAAA,KAAM,CACjCC,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,KAChCa,EAASZ,EAAK,CAACH,EAAO,GAAGE,EAAO,QACjCY,EAAAA,EAAAA,KAAMR,GAAQ,SAAAtI,GAAC,OAAE+I,EAASZ,EAAK,CAACnI,EAAE,GAAG,GAAGA,EAAE,GAAG,IAAI,KACpDsI,EAAQvI,SAAQ,SAAA+F,GACZA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAG+C,EAClB/C,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAG+C,CACtB,IAEA,IAAMG,GAAgBC,EAAAA,EAAAA,KAAM5C,GAAE,SAACT,EAAEhD,GAAC,OAAGgD,EAAEhD,EAAE,IAEzC,IAAMsG,GAAapB,EAAAA,EAAAA,KAAQ,EAAEZ,GAAKhH,KAAI,SAAAF,GAAC,OAAEqG,EAAEqB,EAAS1H,IAAI0H,EAAS1H,IAAIgJ,CAAa,IAElF,MAAO,CAACpB,SAAAA,EAASU,QAAAA,EAAQY,WAAAA,EAC7B,CA7HuDC,CAAahC,EAAQ7E,EAAewH,EAAaC,GAAjFnC,EAAQ,EAARA,SAAUU,EAAO,EAAPA,QAAQY,EAAU,EAAVA,WACnBoB,GAAMxC,EAAAA,EAAAA,KAAQ,EAAEiC,GAChBxI,EAAYe,EAAcpC,KAAI,SAACF,EAAGoK,GACpC,MAAO,CACHhK,KAAM,WACNjB,KAAM,UACNqC,KAAMxB,EACNH,EAAGyK,EAAIpK,KAAI,SAAA0C,GAAC,OAAIgF,EAASwC,EAAGL,EAAInH,GAAG,EAAE,IACrC9C,EAAGwK,EAAIpK,KAAI,SAAA0C,GAAC,OAAIgF,EAASwC,EAAGL,EAAInH,GAAG,EAAE,IAE7C,IAEAnD,EAAY8B,GAEZ,IAAMrD,GAAM,kBAAO8D,GAAU,IACzBd,MAAO,CACH/C,MAAO,CAACC,KAAK,QAAD,OAAUqG,KAAK2E,MAAoB,IAAdF,EAAW,IAAS,GAAE,QAE3DpI,MAAO,CACH3C,MAAO,CAACC,KAAK,QAAD,OAAUqG,KAAK2E,MAAoB,IAAdF,EAAW,IAAS,GAAE,UAG/DhL,EAAOmL,OAASf,EAAQpI,KAAI,SAAA4F,GAAC,MAAG,CAC5B1F,KAAM,OACNkJ,GAAIxD,EAAE,GAAG,GACTyD,GAAIzD,EAAE,GAAG,GACT0D,GAAI1D,EAAE,GAAG,GACT2D,GAAI3D,EAAE,GAAG,GACZ,IACD5H,EAAOwL,YAAcpB,EAAQpI,KAAI,SAAA4F,GAAC,MAAG,CACjCjG,EAAGiG,EAAE,GAAG,GACRhG,EAAGgG,EAAE,GAAG,GACR1H,KAAM0H,EAAEtE,KACRmI,QAAQ,SACRC,QAAQ,SACRC,KAAK,CAACtJ,MAAOuF,EAAE6C,KAAK7C,EAAE8C,IAAK,MAAM,SACpC,IAEDrG,EAAUrE,EAGd,CAFC,MAAMuH,GACHhG,EAAY,GAChB,CACJ,GACJ,GAAE,CAAC6C,EAAc3D,KAWT,SAAC,IAAI,CAACA,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQA,EAAQoD,kBAAkB,GAE1G,EAIA,SAASyH,EAASnD,EAAEnH,GAChB,OAAOgG,KAAKC,MAAMkB,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,KAAKmH,EAAE,GAAGnH,EAAE,IACjE,CClGA,IAAMR,EAAW,GACX+D,EAAW,CAAC7D,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGG,EAAE,IACnDwC,MAAO,CACHqJ,MAAO,GAEPC,SAAU,CACN3I,KAAM,IAGdf,MAAO,CACHyJ,MAAO,GACPE,WAAY,IACZD,SAAU,CACN3I,KAAM,KAiFlB,EA1Ec,SAAH,GAAoD,IAAD,IAA9ClD,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAAEe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQyL,EAAY,EAAZA,aAC1C,GAA+BnL,EAAAA,EAAAA,UAAStB,GAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAA2BF,EAAAA,EAAAA,UAASyC,GAAW,eAAxC9D,EAAM,KAACqE,EAAS,KACvB,GAAoClD,EAAAA,EAAAA,iBAAe,eAAlCC,GAAD,KAAgB,MAmEhC,OAlEAM,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IACI,IAAIwK,EAAc,GACda,EAAIhM,EAAKuB,KAAI,SAAC3B,EAAG8I,GAEjB,OADAyC,EAAY7J,KAAKhB,EAAQV,IAClBS,EAAOT,GAAG2B,KAAI,SAAAF,GAAC,OAAGA,EAAE0K,EAAa,GAC5C,IAEIhB,EAAa,GACX/H,EAAGmI,EAAY5J,KAAI,SAAAF,GAAC,OAAE8J,EAAY5J,KAAI,SAAAF,GAAC,OAAE,IAAI,GAAC,IACpD2B,EAAEmI,EAAYzJ,OAAO,GAAGyJ,EAAYzJ,OAAO,GAAK,EAChD,IAAK,IAAIuC,EAAE,EAAEA,EAAEkH,EAAYzJ,OAAO,EAAEuC,IAAI,CACpCjB,EAAEiB,GAAGA,GAAK,EACV,IAAK,IAAIiB,EAAEjB,EAAE,EAAEiB,EAAEiG,EAAYzJ,OAAOwD,IAAI,CACpC,IAEI+G,EAFOD,EAAE/H,GAAGvC,OACLsK,EAAE9G,GAAGxD,OACKwK,EAAQF,EAAE/H,GAAG+H,EAAE9G,IAAIgH,EAAQF,EAAE9G,GAAG8G,EAAE/H,IACvDjB,EAAEiB,GAAGiB,GAAKY,KAAKoB,IAAI+E,GACnBjJ,EAAEkC,GAAGjB,GAAKjB,EAAEiB,GAAGiB,GACXlC,EAAEiB,GAAGiB,GAET6F,EAAYzJ,KAAK,CACb6K,KAAM,KACNC,KAAM,KACNlL,EAAGiK,EAAYjG,GACf/D,EAAGgK,EAAYlH,GACfxE,KAAMqG,KAAK2E,MAAW,IAALwB,GAAU,IAC3Bf,KAAM,CACFtJ,MAAO,SAEXyK,WAAW,GAEnB,CACJ,CAiBAvL,EAfkB,CACd,CACIW,KAAM,UACNoB,KAAMkJ,EACN7K,EAAGiK,EACHhK,EAAGgK,EACHnI,EAAAA,EACAsJ,OAAM,EACNC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbhM,WAAU,KAMlB,IAAMlB,GAAM,kBAAO8D,GAAU,IACzB0H,YAAAA,IAIJnH,EAAUrE,EAGd,CAFC,MAAMuH,GACHhG,EAAY,GAChB,CACJ,GACJ,GAAE,CAACiL,EAAa/L,KAGR,SAAC,IAAI,CAACA,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQA,EAAQoD,kBAAkB,GAE1G,EAwCO,SAASuJ,EAAQQ,EAAIC,GACxB,IAAMC,EAAmB9G,KAAnB8G,IAAKrG,EAAcT,KAAdS,IAAKR,EAASD,KAATC,KACZ8G,EAAM,SAAC5F,EAAGnH,GAAC,OAAKmH,EAAInH,CAAC,EACrB+G,EAAI+F,EAAIF,EAAGhL,OAAQiL,EAAGjL,QAC1B,GAAU,IAANmF,EACA,OAAO,EACV,MACU,CAAC6F,EAAG9F,MAAM,EAAGC,GAAI8F,EAAG/F,MAAM,EAAGC,IACxC,EAAmB,CADlB6F,EAAE,KAAEC,EAAE,MACqBpL,KAAI,SAAA1B,GAAC,OAAIA,EAAEqI,OAAO2E,EAAI,IAAC,eAA9CC,EAAI,KAAEC,EAAI,KACf,EAAmB,CAACL,EAAIC,GAAIpL,KAAI,SAAA1B,GAAC,OAAIA,EAAEqI,QAAO,SAACjB,EAAGnH,GAAC,OAAKmH,EAAIV,EAAIzG,EAAG,EAAE,GAAE,EAAE,IAAC,eAArEkN,EAAI,KAAEC,EAAI,KACXC,EAASR,EAAGnL,KAAI,SAACsF,EAAG5C,GAAC,OAAK4C,EAAI8F,EAAG1I,EAAE,IAAEiE,OAAO2E,GAC5CM,EAAQpH,GAAMiH,EAAOzG,EAAIuG,EAAM,GAAKjG,IAAMoG,EAAO1G,EAAIwG,EAAM,GAAKlG,IACpE,OAAc,IAAVsG,EACO,GAEHD,EAAUJ,EAAOC,EAAOlG,GAAMsG,CAC1C,CCnJA,IAAM7N,EAAS,GACTC,EAAO,CAACC,MAAM,CAACC,KAAK,GAAGC,IAAI,GAAGC,OAAO,CAACC,EAAE,GAAGC,EAAE,GAAGC,EAAE,GAAGC,EAAE,IAAK2C,OAAO,IAAI0K,WAAY,QAAQC,QAAS,SAsD1G,EArDoB,SAAH,GAAyE,IAAD,IAAnErN,KAAAA,OAAI,IAAC,EAAAV,EAAQ,EAACe,EAAM,EAANA,OAAOC,EAAO,EAAPA,QAAQqD,EAAa,EAAbA,cAAczD,EAAM,EAANA,OAAO,EAAD,EAACM,KAAAA,OAAI,IAAC,WAAQ,EACjF,GAAoCE,EAAAA,EAAAA,iBAAe,eAAlCC,GAAD,KAAgB,MAChC,GAA+BC,EAAAA,EAAAA,UAAStB,GAAS,eAA1CuB,EAAQ,KAACC,EAAW,KAC3B,GAA6BF,EAAAA,EAAAA,UAAS,IAAG,eAAlC0M,EAAO,KAACC,EAAU,MACzBtM,EAAAA,EAAAA,YAAU,WACNN,GAAgB,WACZ,IAAMO,EAAI,GACJC,EAAI,CAAC,EACXwC,EAAcvC,SAAQ,SAAC0C,GACnB3C,EAAE2C,GAAK,EACX,IACAyJ,EAAW,EAAClC,EAAAA,EAAAA,KAAM1H,GAAc,SAAAG,GAAC,OAAE5D,EAAO4D,GAAG,EAAE,IAAE,GAAEqG,EAAAA,EAAAA,KAAMxG,GAAc,SAAAG,GAAC,OAAE5D,EAAO4D,GAAG,EAAE,IAAE,IACxF9D,EAAKuB,KAAI,SAAA3B,GACL,IAAM4N,EAAKlN,EAAQV,GACnBS,EAAOT,GAAGwB,SAAQ,SAAAC,GACdH,EAAEI,KAAKkM,GACP7J,EAAcvC,SAAQ,SAAC0C,EAAEG,GACrB9C,EAAE2C,GAAGxC,KAAKD,EAAEyC,GAChB,GACJ,GACJ,IACA,IAAMlB,EAAYe,EAAcpC,KAAI,SAAAuC,GAChC,MAAQ,CACJrC,KAAMjB,EACNU,EAAAA,EACAC,EAAGA,EAAE2C,GACL2J,YAAa3J,EACb4J,WAAY5J,EACZjB,KAAMiB,EACN6J,OAAQ,OACRC,IAAK,CACDC,SAAS,GAKbC,SAAU,CACND,SAAS,GAGrB,IACA/M,EAAY8B,EAChB,GACJ,GAAE,CAAC5C,EAAK2D,EAAcnD,IACtB,IAAM0B,GAAQ,kBAAI3C,GAAM,IACpB4C,MAAM,CACFE,WAAU,EACVC,MAAMgL,KAId,OAAQ,SAAC,IAAI,CAACS,UAAS,iBAAYvN,GAAQR,KAAMa,EAAU2B,MAAO,CAACC,MAAO,OAAOC,OAAO,QAASnD,OAAQ2C,EAASS,kBAAkB,GACxI,ECpCMqL,EAAQ,CAAC,YAAc,kBACzBC,MAAO,SACPC,QAAS,eACT,iBAAoB,iBACpB,mBAAsB,gBACtB,oBAAsB,qBACtB,KAAO,sBACP,UAAY,gBACZ,aAAe,iBAuQnB,EAnQY,WACR,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,GAA2BzN,EAAAA,EAAAA,WAAS,GAAM,eAAnC0N,EAAM,KAACC,EAAS,KACvB,GAA8B3N,EAAAA,EAAAA,UAAS,IAAG,eAAnC4N,EAAQ,KAACC,EAAU,KAC1B,GAAiC7N,EAAAA,EAAAA,UAAS,IAAG,eAAtC8N,EAAS,KAACC,EAAY,KAC7B,GAA6C/N,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAlDgO,EAAe,KAACC,EAAkB,KACzC,GAA+BjO,EAAAA,EAAAA,UAAS,SAAQ,eAAzCkO,EAAQ,KAACC,EAAW,KAC3B,GAA2BnO,EAAAA,EAAAA,UAAS,IAAG,eACvC,GADa,KAAU,MACAA,EAAAA,EAAAA,UAAS,CAAC,CAACwB,MAAM,IAAIwH,IAAI,SAC5C,CAACxH,MAAM,IAAIwH,IAAI,WACf,CAACxH,MAAM,IAAIwH,IAAI,KAAKoF,MAAK,GACzB,CAAC5M,MAAM,QAAQwH,IAAI,MACnB,CAACxH,MAAM,MAAMwH,IAAI,GAAGoF,MAAK,MAC3B,eALK9K,EAAI,KAAC+K,EAAO,MA6BnBhO,EAAAA,EAAAA,YAAU,WACN,MAtBJ,SAAwBqN,EAAOH,GAC3B,IAAMe,EAAMZ,EAAO,UAAU,UACvBa,EAAMb,EAAO,UAAU,UACvBc,GAAaC,EAAAA,EAAAA,KAAOlB,GAAM,SAAA9M,GAAC,OAAEA,EAAE6N,EAAI,IACnCI,EAAY,CAAC,EACbC,EAAW,GACXC,EAAUJ,EAAW7N,KAAI,YAAW,IAAD,eAARyK,EAAC,KAACyD,EAAE,KAC3BC,EAAMC,OAAOC,KAAKN,GAAW/N,KAAI,SAAAuC,GAAC,MAAE,CAACA,EAAE,GAAG,IAShD,OARA2L,EAAGrO,SAAQ,SAAAC,QACiBwO,IAApBP,EAAUjO,EAAE8N,MACZG,EAAUjO,EAAE8N,IAAQO,EAAIhO,OACxBgO,EAAIJ,EAAUjO,EAAE8N,KAAO,CAAC9N,EAAE8N,GAAK,KAEnCO,EAAIJ,EAAUjO,EAAE8N,KAAO,GAAG7N,KAAKD,GAC/BkO,EAASjO,KAAKD,EAAErB,KACpB,IACO,CAACgM,EAAE0D,EACd,IAEA,OADAjB,EAAWe,GACJ,CAACD,SAAAA,EACZ,CAEuBO,CAAexB,EAAOH,GAAlCoB,EAAQ,EAARA,SACDX,EAAkB,CAAC,EACzB,GAAIT,EAAM,IAAIA,EAAM,GAAGnO,MAAMmO,EAAM,GAAGnO,KAAK,GAAI,CAC3C,IAAIoJ,EAAMuG,OAAOC,KAAKzB,EAAM,GAAGnO,KAAK,IACpCoJ,EAAIhI,SAAQ,SAAA0C,GACR8K,EAAgB9K,GAAK,CAAE4F,KAAUA,KACjC,IAAMqG,EAAKR,EAAShO,KAAI,SAAAF,GAAC,OAAEiI,EAAAA,EAAAA,KAASjI,GAAE,SAAAA,GAAC,OAAGA,EAAEyC,EAAE,GAAC,IAC/C8K,EAAgB9K,GAAK,EAACuH,EAAAA,EAAAA,KAAM0E,GAAG,SAAA1O,GAAC,OAAEA,EAAE,EAAE,KAAE8I,EAAAA,EAAAA,KAAM4F,GAAG,SAAA1O,GAAC,OAAEA,EAAE,EAAE,KACpD2M,EAAQlK,KACR8K,EAAgB9K,GAAG1B,MAAQ4L,EAAQlK,GAC3C,IACA6K,EAAavF,EACjB,MACIuF,EAAa,IACjBE,EAAmBD,EACvB,GAAE,CAACN,EAAOH,IAGV,IAAM6B,GAAe,SAACpG,EAAIqG,GACtB/L,EAAK0F,GAAKA,IAAMqG,EAChBhB,GAAQ,OAAI/K,GAChB,EACMgM,GAA2B,YAAXpB,GAAmC,WAAXA,GAAkC,WAAXA,GAAkC,UAAXA,GAAiC,UAAXA,EAqC5GqB,GAAc,SAAH,GAAuB,IAAD,eAAjBC,EAAO,KAACC,EAAK,KAC/B,OAAQvB,GACJ,IAAK,UACL,IAAK,QACD,OAAO,SAACwB,EAAA,GAAI,CAACC,WAAS,WACjBF,EAAM9O,KAAI,WAAgB0C,GAAC,qBAAfyL,EAAG,KAAEc,EAAO,YAAQ,UAACF,EAAA,GAAI,CAA2B3H,MAAI,EAAC8H,GAAI,EACnCC,GAAI,CAAChO,OAAQ,IAAKiO,GAAI,EAAGC,WAAW,GAAG,WAC1E,SAACC,EAAA,EAAU,CAACC,QAAS,KAAMC,UAAW,SAAS,SAAErB,IAChDc,EAAQ,KACL,SAAC,EAAS,CAACxQ,KAAgB,QAAZ,EAAEwQ,EAAQ,UAAE,aAAV,EAAYxQ,KAClBC,KAAMiE,EAAK,GAAG0F,IACdzJ,KAAM+D,EAAK,GAAG0F,IACd1J,OAAQ0O,EACRxO,KAAM8D,EAAK,GAAG0F,IACdrJ,YAAaqO,EAAgB1K,EAAK,GAAG0F,KACrCvJ,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnBtD,KAAMsO,EACNrO,UAAe,IAAJwD,MACpB,UAdqCmM,EAAO,YAAIV,GAenD,MAEf,IAAK,SACD,OAAO,SAACY,EAAA,GAAI,CAACC,WAAS,WAAErM,EAAK,GAAG0F,IAAIrI,KAAI,SAAAuC,GAAC,OAAE,SAACwM,EAAA,GAAI,CAAS3H,MAAI,EAAC8H,GAAIvM,EAAK,GAAG0F,IAAIlI,OAAO,EAAE,EAAE,GAAG,UACpF,SAAC,EAAU,CACPrB,OAAQ,+BAAKT,GAAF,KAAG,aAAMA,EAAE,GAAKA,EAAE,GAAGI,KAAO,EAAE,EACzCM,QAAS,+BAAEwD,EAAC,KAAG,YAAMA,CAAC,EACtB9D,KAAMqQ,EACNpQ,KAAM,QACNE,KAAM2D,EACN5D,OAAQ0O,KAPkC9K,EASvC,MACnB,IAAK,SACD,OAAO,SAAC,EAAW,CACfzD,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB5D,OAAQ0O,EACR5O,KAAMqQ,EACN7P,KAAM,SACNmD,cAAeO,EAAK,GAAG0F,MAE/B,IAAK,UACD,OAAO,SAAC,EAAW,CACfvJ,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB5D,OAAQ0O,EACR5O,KAAMqQ,EACN7P,KAAM,MACNmD,cAAeO,EAAK,GAAG0F,MAE/B,IAAK,QACD,OAAO,SAACoH,EAAU,CACd3Q,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB9D,KAAMqQ,EACN1M,cAAeO,EAAK,GAAG0F,MAE/B,IAAK,MACD,OAAO,SAAC,EAAQ,CACZvJ,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB9D,KAAMqQ,EACN1M,cAAeO,EAAK,GAAG0F,MAE/B,IAAK,QACD,OAAO,SAAC,EAAS,CACbvJ,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB9D,KAAMqQ,EACN1M,cAAeO,EAAK,GAAG0F,MAE/B,IAAK,MACD,OAAO,SAAC0G,EAAA,GAAI,CAACC,WAAS,WACjBrM,EAAK,GAAG0F,IAAIrI,KAAI,SAACF,GAAC,OAAK,UAACiP,EAAA,GAAI,CAAS3H,MAAI,EAAC8H,GAAIvM,EAAK,GAAG0F,IAAIlI,OAAO,EAAE,EAAE,GAAIgP,GAAI,CAAChO,OAAQ,IAAKiO,GAAI,GAAG,WAC/F,SAACE,EAAA,EAAU,CAACC,QAAS,KAAMC,UAAW,SAAS,SAAE1P,KACjD,SAAC,EAAQ,CAAChB,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAC7BM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB9D,KAAMqQ,EACNtE,aAAc1K,MALEA,EAO5B,MAEf,IAAK,SACD,OAAO,SAAC4P,EAAW,CACf5Q,OAAQ,+BAAIT,GAAD,KAAE,aAAIA,EAAE,GAAGA,EAAE,GAAGI,KAAK,EAAE,EAClCM,QAAS,+BAAEwD,EAAC,KAAE,YAAIA,CAAC,EACnB9D,KAAMqQ,EACNpQ,KAAMiE,EAAK,GAAG0F,IACdzJ,KAAM+D,EAAK,GAAG0F,IACd7G,KAAMmB,EAAK,GAAG0F,IACdxJ,KAAM8D,EAAK,GAAG0F,MAEtB,QACI,OAAO,8BAAE,oBAErB,EACA,OACI,UAAC0G,EAAA,GAAI,CAACC,WAAS,EAACW,QAASC,EAAAA,GAAY,WACjC,SAACb,EAAA,GAAI,CAAC3H,MAAI,EAAC8H,GAAI,GAAG,UACd,UAACW,EAAA,EAAK,CAACF,QAAS,EAAGG,UAAW,MAAM,WAChC,UAACC,EAAA,EAAS,CACNC,QAAM,EACNnP,MAAM,YACNc,KAAK,QACLwN,GAAI,CAACc,SAAS,KACdvB,MAAOnB,EACP2C,SAAU,SAACC,GAAK,OAAG3C,EAAY2C,EAAMC,OAAO1B,MAAM,EAAC,WAEnD,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,UAAU,SAAC,kBAG5B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,QAAQ,SAAC,gBAG1B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,SAAS,SAAC,0BAG3B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,SAAS,SAAC,4BAG3B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,UAAU,SAAC,wBAG5B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,SAAS,SAAC,qBAG3B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,QAAQ,SAAC,WAG1B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,MAAM,SAAC,SAGxB,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,QAAQ,SAAC,WAG1B,SAAC2B,EAAA,EAAQ,CAAC3B,MAAO,MAAM,SAAC,0BAI5B,SAAC4B,EAAA,EAAY,CAAC5B,MAAM,cAAc6B,SAAUxD,EAAQ1M,MAAM,UAC5C6P,SAAU,kBAAIlD,GAAWD,EAAO,EAAC,SAAC,yBAjL7C,WACf,OAAQQ,GACJ,IAAK,UACL,IAAK,QACD,OAAO5K,EAAK3C,KAAI,SAAC0F,EAAEhD,GAAC,OAAG,SAAC8N,EAAA,EAAY,CAAC9B,MAAOhJ,EAAE2C,IACToI,eAAgB,SAAA3Q,GAAC,OAAEA,CAAC,EACpB6B,KAAM,QACNwN,GAAI,CAACc,SAAS,IAAIS,QAAQhL,EAAE+H,KAAM,YAAOa,GACzCqC,QAASxD,EACT+C,SAAU,SAACC,EAAOS,GAAQ,OAAKnC,GAAa/L,EAAGkO,EAAS,EACxDC,YAAa,SAACC,GAAM,OAAK,SAACf,EAAA,GAAS,kBAAKe,GAAM,IAAEjQ,MAAO6E,EAAE7E,QAAQ,GAN9C6E,EAAE7E,MAM+C,IAE7G,IAAK,SACL,IAAK,UACL,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,MACL,IAAK,SACD,OAAO,SAAC2P,EAAA,EAAY,CAAC9B,MAAO/L,EAAK,GAAG0F,IACf0I,UAAQ,EACRN,eAAgB,SAAA3Q,GAAC,OAAEA,CAAC,EACpB6B,KAAM,QACNgP,QAASxD,EACT+C,SAAU,SAACC,EAAOS,GAAQ,OAAKnC,GAAa,EAAGmC,EAAS,EACxDC,YAAa,SAACC,GAAM,OAAK,SAACf,EAAA,GAAS,kBAAKe,GAAM,IAAEjQ,MAAO8B,EAAK,GAAG9B,QAAQ,IAChG,QACI,OAAO8B,EAAK3C,KAAI,SAAC0F,EAAEhD,GAAC,OAAG,SAAC8N,EAAA,EAAY,CAAC9B,MAAOhJ,EAAE2C,IACT1G,KAAM,QACN8O,eAAgB,SAAA3Q,GAAC,OAAEA,CAAC,EACpBqP,GAAI,CAACc,SAAS,IAAIS,QAAkB,UAAVhL,EAAE7E,MAAiB,YAAOyN,GACpDqC,QAASxD,EACT+C,SAAU,SAACC,EAAOS,GAAQ,OAAKnC,GAAa/L,EAAGkO,EAAS,EACxDC,YAAa,SAACC,GAAM,OAAK,SAACf,EAAA,GAAS,kBAAKe,GAAM,IAAEjQ,MAAO6E,EAAE7E,QAAQ,GAN9C6E,EAAE7E,MAM+C,IAErH,CA+IiBmQ,QAKL/D,EAASjN,KAAI,+BAAE6O,EAAO,KAACC,EAAK,YAAK,SAACC,EAAA,GAAI,CAAC3H,MAAI,EAAe8H,GAAIP,GAAY,GAAG,EAAE,UAC3E,SAACsC,EAAA,EAAI,WACD,UAACC,EAAA,EAAG,CAAC/B,GAAI,CAAE1E,EAAG,EAAG0G,GAAI,GAAI,WACrB,SAAC7B,EAAA,EAAU,CAACC,QAAS,KAAK,SAAEV,IAExBD,GAAY,CAACC,EAAQC,UALYD,EAS1C,MAIvB,C","sources":["components/viz/lineChart/index.js","components/viz/lineChart/index_combine.js","components/viz/Ribbon/index.js","components/viz/Splom/index.js","components/viz/PCA/PCA.js","components/viz/PCA/index.js","components/viz/PCA/index_reverse.js","components/viz/similarity/index.js","components/viz/violinChart/index.js","views/viz/index.js"],"sourcesContent":["import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useState, useTransition} from \"react\";\r\n\r\nconst initData=[];\r\nconst domain=[undefined,undefined];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:30,r:30}}\r\nconst LineChart = ({data=initData,xKey,domain,yKey,cKey,getArr,getName,colorDomain=domain,mode='line',showscale})=>{\r\n    const [isPending,startTransition] = useTransition();\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [colordata,setColordata] = useState([]);\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            const x=[];\r\n            const y=[];\r\n            data.forEach(d=>{\r\n                x.push(d[xKey]);\r\n                y.push(d[yKey]);\r\n            })\r\n            setPlotdata({\r\n                x,\r\n                y,\r\n            })\r\n        })\r\n    },[xKey,yKey,data]);\r\n    useEffect(()=>{\r\n        if (mode==='markers'){\r\n            debugger\r\n            if (cKey) {\r\n                setColordata(data.map(d=>d[cKey]));\r\n            }else {\r\n                setColordata([]);\r\n            }\r\n        }else\r\n            setColordata([]);\r\n    },[data,cKey,mode])\r\n    const plotopt = [{\r\n        x:plotdata.x,\r\n        y:plotdata.y,\r\n        type: 'scatter',\r\n        mode\r\n        // marker: {color: 'red'},\r\n    }];\r\n    // console.log(colorDomain)\r\n    if (colordata.length)\r\n        plotopt[0].marker = {color:colordata, colorscale: \"Portland\",colorbarTitleText: cKey,\r\n            colorbarThickness:5,\r\n            showscale,\r\n            cmin:colorDomain[0],cmax:colorDomain[1]\r\n        }\r\n    const _layout={...layout,\r\n        yaxis:{\r\n        title: `<b>${domain[yKey].label??yKey}</b>`,\r\n        autorange:false,\r\n            range:domain[yKey]\r\n        },\r\n        xaxis:{\r\n            title:`<b>${domain[xKey].label??xKey}</b>`\r\n        }\r\n    }\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotopt} style={{width: '100%',height:'100%'}} layout={_layout} useResizeHandler={true}/>)\r\n}\r\n\r\nexport default LineChart","import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useState, useTransition} from \"react\";\r\n\r\nconst initData=[];\r\nconst domain=[undefined,undefined];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:20,r:30}}\r\nconst LineChart = ({data=initData,getArr,getName,xKey,yKey,domain,mode='line',showscale})=>{\r\n    const [isPending,startTransition] = useTransition();\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [colordata,setColordata] = useState([]);\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            const traceData = data.map(t=>{\r\n                const x=[];\r\n                const y=[];\r\n                getArr(t).forEach(d=>{\r\n                    x.push(d[xKey]);\r\n                    y.push(d[yKey]);\r\n                })\r\n                return{\r\n                    name:getName(t),\r\n                    x,\r\n                    y,\r\n                    type: 'scatter',\r\n                }\r\n            })\r\n            setPlotdata(traceData)\r\n        })\r\n    },[xKey,yKey,data]);\r\n    // useEffect(()=>{\r\n    //     if (mode==='markers'){\r\n    //         debugger\r\n    //         if (cKey) {\r\n    //             setColordata(data.map(d=>d[cKey]));\r\n    //         }else {\r\n    //             setColordata([]);\r\n    //         }\r\n    //     }else\r\n    //         setColordata([]);\r\n    // },[data,cKey,mode])\r\n    // const plotopt = [{\r\n    //     x:plotdata.x,\r\n    //     y:plotdata.y,\r\n    //     type: 'scatter',\r\n    //     mode\r\n    //     // marker: {color: 'red'},\r\n    // }];\r\n    // console.log(colorDomain)\r\n    // if (colordata.length)\r\n    //     plotopt[0].marker = {color:colordata, colorscale: \"Portland\",colorbarTitleText: cKey,\r\n    //         colorbarThickness:5,\r\n    //         showscale,\r\n    //         cmin:colorDomain[0],cmax:colorDomain[1]\r\n    // }\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    const _layout={...layout,\r\n        yaxis:{\r\n            title: `<b>${domain[yKey].label??yKey}</b>`,\r\n            autoscale: false,\r\n            range:domain[yKey]\r\n        },\r\n        xaxis:{\r\n            title:`<b>${domain[xKey].label??xKey}</b>`\r\n        }\r\n    }\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={_layout} useResizeHandler={true}/>)\r\n}\r\n\r\nexport default LineChart","import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nconst initData = [];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:20,r:10}}\r\nconst Chart = ({data=initData, getArr,getName,xKey,yKey,zKey,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    useEffect(()=>{\r\n        debugger\r\n        const traceData = data.map(t=>{\r\n            const x=[];\r\n            const y=[];\r\n            const z=[];\r\n            getArr(t).forEach(d=>{\r\n                x.push(d[xKey]);\r\n                y.push(d[yKey]);\r\n                z.push(d[zKey]);\r\n            })\r\n            return{\r\n                name:getName(t),\r\n                x,\r\n                y,\r\n                z,\r\n            }\r\n        })\r\n        setPlotdata(traceData)\r\n    },[xKey,yKey,zKey,data]);\r\n    const plotopt = useMemo(()=>{\r\n        return plotdata.map(d=>({\r\n            ...d,\r\n            type: 'scatter3d',\r\n            colorscale: \"Portland\",\r\n            mode: 'markers',\r\n            marker:{size:3}\r\n        }))\r\n    },[plotdata]);\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotopt} style={{width: '100%',height:'100%'}} layout={{...layout,\r\n        scene: {\r\n            xaxis: {\r\n                title: {text: xKey}\r\n            },\r\n            yaxis: {\r\n                title: {text: yKey}\r\n            },\r\n            zaxis: {\r\n                title: {text: zKey}\r\n            }\r\n        }\r\n    }} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;","import Plot from 'react-plotly.js';\r\n\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,l:50,b:50,r:10},\r\n    hovermode:'closest',\r\n    dragmode:'select',\r\n    plot_bgcolor:'rgba(240,240,240, 0.95)',\r\n    grid:{roworder:'bottom to top'}\r\n};\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKeys,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    useEffect(()=>{\r\n        const traceData = data.map(t=>{\r\n            const dimensions = dimensionKeys.map(k=> ({label:k, values:[]}));\r\n            getArr(t).forEach(d=>{\r\n                dimensions.forEach((k)=>{\r\n                    k.values.push(d[k.label]);\r\n                });\r\n            })\r\n            return {\r\n                type: 'splom',\r\n                name:getName(t),\r\n                dimensions,\r\n                marker: {\r\n                    size: 5,\r\n                    line: {\r\n                        color: 'white',\r\n                        width: 0.5\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        setPlotdata(traceData)\r\n    },[dimensionKeys,data]);\r\n    useEffect(()=>{\r\n        const layout = {...initLayout};\r\n        dimensionKeys.forEach((k,i)=> {\r\n            layout[`xaxis${i}`] = axis()\r\n            layout[`yaxis${i}`] = axis()\r\n        })\r\n        setLayout(layout)\r\n    },[dimensionKeys])\r\n    const axis = () => ({\r\n        showline:false,\r\n        zeroline:false,\r\n        gridcolor:'#ffff',\r\n        ticklen:4\r\n    })\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;","import * as d3 from 'd3'\r\nexport const PCA = function(){\r\n    this.scale = scale;\r\n    this.pca = pca;\r\n\r\n    function mean(X){\r\n        // mean by col\r\n        var T = transpose(X);\r\n        return T.map(function(row){ return d3.sum(row) / X.length; });\r\n    }\r\n\r\n    function transpose(X){\r\n        return d3.range(X[0].length).map(function(i){\r\n            return X.map(function(row){ return row[i]; });\r\n        });\r\n    }\r\n\r\n    function dot(X,Y){\r\n        return X.map(function(row){\r\n            return transpose(Y).map(function(col){\r\n                return d3.sum(d3.zip(row,col).map(function(v){\r\n                    return v[0]*v[1];\r\n                }));\r\n            });\r\n        });\r\n    }\r\n\r\n    function diag(X){\r\n        return d3.range(X.length).map(function(i){\r\n            return d3.range(X.length).map(function(j){ return (i === j) ? X[i] : 0; });\r\n        });\r\n    }\r\n\r\n    function zeros(i,j){\r\n        return d3.range(i).map(function(row){\r\n            return d3.range(j).map(function(){ return 0; });\r\n        });\r\n    }\r\n\r\n    function trunc(X,d){\r\n        return X.map(function(row){\r\n            return row.map(function(x){ return (x < d) ? 0 : x; });\r\n        });\r\n    }\r\n\r\n    function same(X,Y){\r\n        return d3.zip(X,Y).map(function(v){\r\n            return d3.zip(v[0],v[1]).map(function(w){ return w[0] === w[1]; });\r\n        }).map(function(row){\r\n            return row.reduce(function(x,y){ return x*y; });\r\n        }).reduce(function(x,y){ return x*y; });\r\n    }\r\n\r\n    function std(X){\r\n        var m = mean(X);\r\n        return sqrt(mean(mul(X,X)));//, mul(m,m));\r\n    }\r\n\r\n    function sqrt(V){\r\n        return V.map(function(x){ return Math.sqrt(x); });\r\n    }\r\n\r\n    function mul(X,Y){\r\n        return d3.zip(X,Y).map(function(v){\r\n            if (typeof(v[0]) === 'number') return v[0]*v[1];\r\n            return d3.zip(v[0],v[1]).map(function(w){ return w[0]*w[1]; });\r\n        });\r\n    }\r\n\r\n    function sub(x,y){\r\n        console.assert(x.length === y.length, 'dim(x) == dim(y)');\r\n        return d3.zip(x,y).map(function(v){\r\n            if (typeof(v[0]) === 'number') return v[0]-v[1];\r\n            else return d3.zip(v[0],v[1]).map(function(w){ return w[0]-w[1]; });\r\n        });\r\n    }\r\n\r\n    function div(x,y){\r\n        console.assert(x.length === y.length, 'dim(x) == dim(y)');\r\n        return d3.zip(x,y).map(function(v){ return v[1]!==0 ? v[0]/(v[1]): 0; });\r\n\r\n    }\r\n\r\n    function scale(X, center, scale){\r\n        // compatible with R scale()\r\n        if (center){\r\n            var m = mean(X);\r\n            X = X.map(function(row){ return sub(row, m); });\r\n        }\r\n\r\n        if (scale){\r\n            var s = std(X);\r\n            X = X.map(function(row){ return div(row, s); });\r\n        }\r\n        return X;\r\n    }\r\n\r\n    // translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n    function svd(A){\r\n        var temp;\r\n        // Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n        var prec = Math.pow(2,-52); // assumes double prec\r\n        var tolerance = 1.e-64/prec;\r\n        var itmax = 50;\r\n        var c = 0;\r\n        var i = 0;\r\n        var j = 0;\r\n        var k = 0;\r\n        var l = 0;\r\n\r\n        var u = A.map(function(row){ return row.slice(0); });\r\n        var m = u.length;\r\n        var n = u[0].length;\r\n\r\n        console.assert(m >= n, 'Need more rows than columns');\r\n\r\n        var e = d3.range(n).map(function(){ return 0; });\r\n        var q = d3.range(n).map(function(){ return 0; });\r\n        var v = zeros(n,n);\r\n\r\n        function pythag(a,b){\r\n            a = Math.abs(a);\r\n            b = Math.abs(b);\r\n            if (a > b)\r\n                return a*Math.sqrt(1.0+(b*b/a/a));\r\n            else if (b === 0)\r\n                return a;\r\n            return b*Math.sqrt(1.0+(a*a/b/b));\r\n        }\r\n\r\n        // Householder's reduction to bidiagonal form\r\n        var f = 0;\r\n        var g = 0;\r\n        var h = 0;\r\n        var x = 0;\r\n        var y = 0;\r\n        var z = 0;\r\n        var s = 0;\r\n\r\n        for (i=0; i < n; i++)\r\n        {\r\n            e[i]= g;\r\n            s= 0.0;\r\n            l= i+1;\r\n            for (j=i; j < m; j++)\r\n                s += (u[j][i]*u[j][i]);\r\n            if (s <= tolerance)\r\n                g= 0.0;\r\n            else\r\n            {\r\n                f= u[i][i];\r\n                g= Math.sqrt(s);\r\n                if (f >= 0.0) g= -g;\r\n                h= f*g-s;\r\n                u[i][i]=f-g;\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s= 0.0;\r\n                    for (k=i; k < m; k++)\r\n                        s += u[k][i]*u[k][j]\r\n                    f= s/h;\r\n                    for (k=i; k < m; k++)\r\n                        u[k][j]+=f*u[k][i]\r\n                }\r\n            }\r\n            q[i]= g;\r\n            s= 0.0;\r\n            for (j=l; j < n; j++)\r\n                s= s + u[i][j]*u[i][j]\r\n            if (s <= tolerance)\r\n                g= 0.0;\r\n            else\r\n            {\r\n                f= u[i][i+1];\r\n                g= Math.sqrt(s);\r\n                if (f >= 0.0) g= -g;\r\n                h= f*g - s;\r\n                u[i][i+1] = f-g;\r\n                for (j=l; j < n; j++) e[j]= u[i][j]/h\r\n                for (j=l; j < m; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < n; k++)\r\n                        s += (u[j][k]*u[i][k])\r\n                    for (k=l; k < n; k++)\r\n                        u[j][k]+=s*e[k]\r\n                }\r\n            }\r\n            y= Math.abs(q[i])+Math.abs(e[i]);\r\n            if (y>x)\r\n                x=y;\r\n        }\r\n\r\n        // accumulation of right hand gtransformations\r\n        for (i = n-1; i !== -1; i+= -1)\r\n        {\r\n            if (g !== 0.0)\r\n            {\r\n                h= g*u[i][i+1];\r\n                for (j=l; j < n; j++)\r\n                    v[j][i]=u[i][j]/h\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < n; k++)\r\n                        s += u[i][k]*v[k][j]\r\n                    for (k=l; k < n; k++)\r\n                        v[k][j]+=(s*v[k][i])\r\n                }\r\n            }\r\n            for (j=l; j < n; j++)\r\n            {\r\n                v[i][j] = 0;\r\n                v[j][i] = 0;\r\n            }\r\n            v[i][i] = 1;\r\n            g= e[i];\r\n            l= i\r\n        }\r\n\r\n        // accumulation of left hand transformations\r\n        for (i=n-1; i !== -1; i+= -1)\r\n        {\r\n            l= i+1;\r\n            g= q[i];\r\n            for (j=l; j < n; j++)\r\n                u[i][j] = 0;\r\n            if (g !== 0.0)\r\n            {\r\n                h= u[i][i]*g;\r\n                for (j=l; j < n; j++)\r\n                {\r\n                    s=0.0;\r\n                    for (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n                    f= s/h;\r\n                    for (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n                }\r\n                for (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n            }\r\n            else\r\n                for (j=i; j < m; j++) u[j][i] = 0;\r\n            u[i][i] += 1;\r\n        }\r\n\r\n        // diagonalization of the bidiagonal form\r\n        prec= prec*x;\r\n        for (k=n-1; k !== -1; k+= -1)\r\n        {\r\n            for (var iteration=0; iteration < itmax; iteration++)\r\n            {// test f splitting\r\n                var test_convergence = false;\r\n                for (l=k; l !== -1; l+= -1)\r\n                {\r\n                    if (Math.abs(e[l]) <= prec){\r\n                        test_convergence= true;\r\n                        break\r\n                    }\r\n                    if (Math.abs(q[l-1]) <= prec)\r\n                        break\r\n                }\r\n                if (!test_convergence){\r\n                    // cancellation of e[l] if l>0\r\n                    c= 0.0;\r\n                    s= 1.0;\r\n                    var l1= l-1;\r\n                    for (i =l; i<k+1; i++)\r\n                    {\r\n                        f= s*e[i];\r\n                        e[i]= c*e[i];\r\n                        if (Math.abs(f) <= prec)\r\n                            break;\r\n                        g= q[i];\r\n                        h= pythag(f,g);\r\n                        q[i]= h;\r\n                        c= g/h;\r\n                        s= -f/h;\r\n                        for (j=0; j < m; j++)\r\n                        {\r\n                            y= u[j][l1];\r\n                            z= u[j][i];\r\n                            u[j][l1] =  y*c+(z*s);\r\n                            u[j][i] = -y*s+(z*c);\r\n                        }\r\n                    }\r\n                }\r\n                // test f convergence\r\n                z= q[k];\r\n                if (l=== k){\r\n                    //convergence\r\n                    if (z<0.0)\r\n                    { //q[k] is made non-negative\r\n                        q[k]= -z;\r\n                        for (j=0; j < n; j++)\r\n                            v[j][k] = -v[j][k]\r\n                    }\r\n                    break  //break out of iteration loop and move on to next k value\r\n                }\r\n\r\n                console.assert(iteration < itmax-1, 'Error: no convergence.');\r\n\r\n                // shift from bottom 2x2 minor\r\n                x= q[l];\r\n                y= q[k-1];\r\n                g= e[k-1];\r\n                h= e[k];\r\n                f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y);\r\n                g= pythag(f,1.0);\r\n                if (f < 0.0)\r\n                    f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x;\r\n                else\r\n                    f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x;\r\n                // next QR transformation\r\n                c= 1.0;\r\n                s= 1.0;\r\n                for (i=l+1; i< k+1; i++)\r\n                {\r\n                    g = e[i];\r\n                    y = q[i];\r\n                    h = s*g;\r\n                    g = c*g;\r\n                    z = pythag(f,h);\r\n                    e[i-1] = z;\r\n                    c = f/z;\r\n                    s = h/z;\r\n                    f = x*c+g*s;\r\n                    g = -x*s+g*c;\r\n                    h = y*s;\r\n                    y = y*c;\r\n                    for (j =0; j < n; j++)\r\n                    {\r\n                        x = v[j][i-1];\r\n                        z = v[j][i];\r\n                        v[j][i-1]  = x*c+z*s;\r\n                        v[j][i]  = -x*s+z*c;\r\n                    }\r\n                    z = pythag(f,h);\r\n                    q[i-1] = z;\r\n                    c = f/z;\r\n                    s = h/z;\r\n                    f = c*g+s*y;\r\n                    x = -s*g+c*y;\r\n                    for (j =0; j < m; j++)\r\n                    {\r\n                        y = u[j][i-1];\r\n                        z = u[j][i];\r\n                        u[j][i-1]  = y*c+z*s;\r\n                        u[j][i]  = -y*s+z*c;\r\n                    }\r\n                }\r\n                e[l] = 0.0;\r\n                e[k] = f;\r\n                q[k] = x;\r\n            }\r\n        }\r\n\r\n        // vt = transpose(v)\r\n        // return (u,q,vt)\r\n        for (i=0;i<q.length; i++)\r\n            if (q[i] < prec) q[i] = 0;\r\n\r\n        // sort eigenvalues\r\n        for (i=0; i< n; i++){\r\n            // writeln(q)\r\n            for (j=i-1; j >= 0; j--){\r\n                if (q[j] < q[i]){\r\n                    // writeln(i,'-',j)\r\n                    c = q[j];\r\n                    q[j] = q[i];\r\n                    q[i] = c;\r\n                    for (k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n                    for (k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n                    i = j\r\n                }\r\n            }\r\n        }\r\n        return { U:u, S:q, V:v }\r\n    }\r\n\r\n    function pca(X,npc){\r\n        var USV = svd(X);\r\n        var U = USV.U;\r\n        var S = diag(USV.S);\r\n        var V = USV.V;\r\n\r\n        // T = X*V = U*S\r\n        var pcXV = dot(X,V);\r\n        var pcUdS = dot(U,S);\r\n\r\n        // var prod = trunc(sub(pcXV,pcUdS), 1e-11);\r\n        var prod = trunc(sub(pcXV,pcUdS), 1e-12);\r\n        var zero = zeros(prod.length, prod[0].length);\r\n        console.assert(same(prod,zero), 'svd and eig ways must be the same.');\r\n        var twomost = [];\r\n        for (var ipc =0; ipc<npc; ipc++)\r\n            twomost.push(ipc);\r\n\r\n        for (var i in USV.S) {\r\n            for (var ipc =0; ipc<npc; ipc++) {\r\n                if (USV.S[i]>=USV.S[twomost[ipc]]) {\r\n                    twomost[ipc] = parseInt(i);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return [pcUdS,V,twomost,S] ;\r\n    }\r\n};","import Plot from 'react-plotly.js';\r\nimport {range as d3range, extent as d3extent, max as d3max, sum as d3sum} from 'd3';\r\nimport {PCA} from './PCA'\r\n\r\nimport {useEffect, useMemo, useState, useTransition} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,l:50,b:50,r:10},\r\n};\r\n\r\nconst DIM = 2;\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKeys,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    const [isPending,startTransition] = useTransition();\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            try {\r\n                const dataIn = [];\r\n                const traceIndex = [];\r\n                data.forEach((t, ti) => {\r\n                    traceIndex[ti] = [];\r\n                    getArr(t).forEach(d => {\r\n                        let item = dimensionKeys.map((k) => +d[k]);\r\n                        traceIndex[ti].push(dataIn.length);\r\n                        dataIn.push(item);\r\n                    })\r\n                })\r\n                debugger\r\n                const {solution, feature,contribute} = calculatePCA(dataIn, dimensionKeys);\r\n                const traceData = data.map((t, ti) => {\r\n                    return {\r\n                        type: 'scatters',\r\n                        mode: 'markers',\r\n                        name: getName(t),\r\n                        x: traceIndex[ti].map(i => solution[i][0]),\r\n                        y: traceIndex[ti].map(i => solution[i][1]),\r\n                    }\r\n                })\r\n                setPlotdata(traceData)\r\n\r\n                const layout = {...initLayout,\r\n                    xaxis: {\r\n                        title: {text: `PC1 (${Math.round(contribute[0]*1000)/10}%)`}\r\n                    },\r\n                    yaxis: {\r\n                        title: {text: `PC2 (${Math.round(contribute[1]*1000)/10}%)`}\r\n                    }\r\n                };\r\n                layout.shapes = feature.map(f=>({\r\n                    type: 'line',\r\n                    x0: f[0][0],\r\n                    y0: f[0][1],\r\n                    x1: f[1][0],\r\n                    y1: f[1][1],\r\n                }));\r\n                layout.annotations = feature.map(f=>({\r\n                    x: f[1][0],\r\n                    y: f[1][1],\r\n                    text: f.name,\r\n                    xanchor:'center',\r\n                    yanchor:'bottom',\r\n                    font:{color:(f.pc1||f.pc2)?'red':'unset'}\r\n                }));\r\n\r\n                setLayout(layout)\r\n            }catch(e){\r\n                setPlotdata([])\r\n            }\r\n        });\r\n    },[dimensionKeys,data]);\r\n    // useEffect(()=>{\r\n    //     // const layout = {...initLayout};\r\n    //     // dimensionKeys.forEach((k,i)=> {\r\n    //     //     layout[`xaxis${i}`] = axis()\r\n    //     //     layout[`yaxis${i}`] = axis()\r\n    //     // })\r\n    //     // setLayout(layout)\r\n    // },[dimensionKeys])\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;\r\n\r\nfunction distance(a,b){\r\n    return Math.sqrt((a[1]-b[1])*(a[1]-b[1])+(a[0]-b[0])*(a[0]-b[0]));\r\n}\r\nfunction calculatePCA(dataIn,dimensions){\r\n\r\n    let pca = new PCA();\r\n    // console.log(brand_names);\r\n    let matrix = pca.scale(dataIn, true, true);\r\n\r\n    // let matrix = pca.scale(dataIn, false, false);\r\n\r\n    let pc = pca.pca(matrix,DIM);\r\n\r\n    let A = pc[0];  // this is the U matrix from SVD\r\n    let B = pc[1];  // this is the dV matrix from SVD\r\n    let chosenPC = pc[2];   // this is the most value of PCA\r\n    let S = pc[3];   // this is the most value of PCA\r\n    console.log(B)\r\n    let solution = dataIn.map((d,i)=>{\r\n        const dd = d3range(0,DIM).map(dim=>A[i][chosenPC[dim]]);\r\n        dd.data = d;\r\n        return dd\r\n    });\r\n    let xrange = d3extent(solution, d => d[0]);\r\n    let yrange = d3extent(solution, d => d[1]);\r\n\r\n    const root = [0,0];\r\n    let maxV = [[0,-Infinity],[0,-Infinity]]\r\n    const feature = dimensions.map(function (key, i) {\r\n        let brand = [root,d3range(0,DIM).map(dim=>B[i][chosenPC[dim]])];\r\n        maxV.forEach(([index,v],maxi)=>{\r\n            const cv = Math.abs(brand[1][maxi]-brand[0][maxi]);\r\n            if (cv>v)\r\n                maxV[maxi] = [i,cv]\r\n        })\r\n        brand.name = key;\r\n        return brand\r\n    });\r\n    feature[maxV[0][0]].pc1=true;\r\n    feature[maxV[1][0]].pc2=true;\r\n    debugger\r\n    let multiplyBrands = Math.sqrt(d3max([\r\n        distance(root,[xrange[0],yrange[0]]),\r\n        distance(root,[xrange[0],yrange[1]]),\r\n        distance(root,[xrange[1],yrange[0]]),\r\n        distance(root,[xrange[1],yrange[1]]),\r\n    ])/d3max(feature,d=>distance(root,[d[1][0],d[1][1]])));\r\n    feature.forEach(f=>{\r\n        f[1][0] = f[1][0]*multiplyBrands;\r\n        f[1][1] = f[1][1]*multiplyBrands;\r\n    });\r\n\r\n    const contributeMax = d3sum(S,(a,i)=>a[i]);\r\n    debugger\r\n    const contribute = d3range(0,DIM).map(d=>S[chosenPC[d]][chosenPC[d]]/contributeMax)\r\n\r\n    return {solution,feature,contribute};\r\n}\r\n","import Plot from 'react-plotly.js';\r\nimport {range as d3range, extent as d3extent, max as d3max, min as d3min, sum as d3sum} from 'd3';\r\nimport {PCA} from './PCA'\r\n\r\nimport {useEffect, useMemo, useState, useTransition} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,l:50,b:50,r:10},\r\n};\r\n\r\nconst DIM = 2;\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKeys,mode='line'})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    const [isPending,startTransition] = useTransition();\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            try {\r\n                let segmentKeys = data.map(t=>getName(t));\r\n                let len = d3min(data,t=>getArr(t).length);\r\n                // const dataIn = dimensionKeys.map(k=>d3range(0,len));\r\n                // data.forEach((t, ti) => {\r\n                //     let _d = getArr(t);\r\n                //     for (let i=0; i<len;i++){\r\n                //         let d = _d[i];\r\n                //         dimensionKeys.forEach((k,di) => {\r\n                //             dataIn[di][i][ti] = +d[k]\r\n                //         });\r\n                //     }\r\n                // })\r\n                const dataIn = [];\r\n                data.forEach((t, ti) => {\r\n                    let _d = getArr(t);\r\n                    for (let i=0; i<len;i++){\r\n                        let d = _d[i];\r\n                        let item = dimensionKeys.map((k) => +d[k]);\r\n                        dataIn.push(item);\r\n                    }\r\n                })\r\n\r\n                const {solution, feature,contribute} = calculatePCA(dataIn, dimensionKeys, segmentKeys, len);\r\n                const seg = d3range(0,len);\r\n                const traceData = dimensionKeys.map((d, di) => {\r\n                    return {\r\n                        type: 'scatters',\r\n                        mode: 'markers',\r\n                        name: d,\r\n                        x: seg.map(i => solution[di*len+i][0]),\r\n                        y: seg.map(i => solution[di*len+i][1]),\r\n                    }\r\n                })\r\n                debugger\r\n                setPlotdata(traceData)\r\n\r\n                const layout = {...initLayout,\r\n                    xaxis: {\r\n                        title: {text: `PC1 (${Math.round(contribute[0]*1000)/10}%)`}\r\n                    },\r\n                    yaxis: {\r\n                        title: {text: `PC2 (${Math.round(contribute[1]*1000)/10}%)`}\r\n                    }\r\n                };\r\n                layout.shapes = feature.map(f=>({\r\n                    type: 'line',\r\n                    x0: f[0][0],\r\n                    y0: f[0][1],\r\n                    x1: f[1][0],\r\n                    y1: f[1][1],\r\n                }));\r\n                layout.annotations = feature.map(f=>({\r\n                    x: f[1][0],\r\n                    y: f[1][1],\r\n                    text: f.name,\r\n                    xanchor:'center',\r\n                    yanchor:'bottom',\r\n                    font:{color:(f.pc1||f.pc2)?'red':'unset'}\r\n                }));\r\n\r\n                setLayout(layout)\r\n            }catch(e){\r\n                setPlotdata([])\r\n            }\r\n        });\r\n    },[dimensionKeys,data]);\r\n    // useEffect(()=>{\r\n    //     // const layout = {...initLayout};\r\n    //     // dimensionKeys.forEach((k,i)=> {\r\n    //     //     layout[`xaxis${i}`] = axis()\r\n    //     //     layout[`yaxis${i}`] = axis()\r\n    //     // })\r\n    //     // setLayout(layout)\r\n    // },[dimensionKeys])\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;\r\n\r\nfunction distance(a,b){\r\n    return Math.sqrt((a[1]-b[1])*(a[1]-b[1])+(a[0]-b[0])*(a[0]-b[0]));\r\n}\r\nfunction calculatePCA(dataIn,dimensions,segment, len){\r\n\r\n    let pca = new PCA();\r\n    // console.log(brand_names);\r\n    let _matrix = pca.scale(dataIn, true, true);\r\n\r\n    // invert data hew\r\n    let matrix = []\r\n    for (let di=0; di<dimensions.length; di++) {\r\n        for (let i=0; i < len; i++) {\r\n            matrix[di*len+i] = segment.map((s,si)=>_matrix[si*len+i][di]);\r\n        }\r\n    }\r\n    debugger\r\n\r\n    // let matrix = pca.scale(dataIn, false, false);\r\n\r\n    let pc = pca.pca(matrix,DIM);\r\n\r\n    let A = pc[0];  // this is the U matrix from SVD\r\n    let B = pc[1];  // this is the dV matrix from SVD\r\n    let chosenPC = pc[2];   // this is the most value of PCA\r\n    let S = pc[3];   // this is the most value of PCA\r\n    console.log(B)\r\n    let solution = matrix.map((d,i)=>{\r\n        const dd = d3range(0,DIM).map(dim=>A[i][chosenPC[dim]]);\r\n        return dd\r\n    });\r\n    let xrange = d3extent(solution, d => d[0]);\r\n    let yrange = d3extent(solution, d => d[1]);\r\n\r\n    const root = [0,0];\r\n    let maxV = [[0,-Infinity],[0,-Infinity]]\r\n    const feature = segment.map(function (key, i) {\r\n        let brand = [root,d3range(0,DIM).map(dim=>B[i][chosenPC[dim]])];\r\n        maxV.forEach(([index,v],maxi)=>{\r\n            const cv = Math.abs(brand[1][maxi]-brand[0][maxi]);\r\n            if (cv>v)\r\n                maxV[maxi] = [i,cv]\r\n        })\r\n        brand.name = key;\r\n        return brand\r\n    });\r\n    feature[maxV[0][0]].pc1=true;\r\n    feature[maxV[1][0]].pc2=true;\r\n    debugger\r\n    let multiplyBrands = Math.sqrt(d3max([\r\n        distance(root,[xrange[0],yrange[0]]),\r\n        distance(root,[xrange[0],yrange[1]]),\r\n        distance(root,[xrange[1],yrange[0]]),\r\n        distance(root,[xrange[1],yrange[1]]),\r\n    ])/d3max(feature,d=>distance(root,[d[1][0],d[1][1]])));\r\n    feature.forEach(f=>{\r\n        f[1][0] = f[1][0]*multiplyBrands;\r\n        f[1][1] = f[1][1]*multiplyBrands;\r\n    });\r\n\r\n    const contributeMax = d3sum(S,(a,i)=>a[i]);\r\n    debugger\r\n    const contribute = d3range(0,DIM).map(d=>S[chosenPC[d]][chosenPC[d]]/contributeMax)\r\n\r\n    return {solution,feature,contribute};\r\n}\r\n","import Plot from 'react-plotly.js';\r\n// import {range as d3range, extent as d3extent, max as d3max, min as d3min, sum as d3sum} from 'd3';\r\n\r\nimport {useEffect, useMemo, useState, useTransition} from \"react\";\r\nconst initData = [];\r\nconst initLayout={title:{text:'',pad:0},margin:{t:10,r:10},\r\n    xaxis: {\r\n        ticks: '',\r\n        // side: 'top',\r\n        tickfont: {\r\n            size: 8,\r\n        },\r\n    },\r\n    yaxis: {\r\n        ticks: '',\r\n        ticksuffix: ' ',\r\n        tickfont: {\r\n            size: 8,\r\n        },\r\n    }\r\n};\r\n\r\nconst DIM = 2;\r\n\r\nconst Chart = ({data=initData, getArr,getName,dimensionKey})=>{\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [layout,setLayout] = useState(initLayout);\r\n    const [isPending,startTransition] = useTransition();\r\n    useEffect(()=>{\r\n        startTransition(()=>{\r\n            try {\r\n                let segmentKeys = [];\r\n                let p = data.map((t, ti) => {\r\n                    segmentKeys.push(getName(t))\r\n                    return getArr(t).map(d=>+d[dimensionKey])\r\n                })\r\n\r\n                let annotations= [];\r\n                const z =segmentKeys.map(d=>segmentKeys.map(d=>null));\r\n                z[segmentKeys.length-1][segmentKeys.length-1] = 1\r\n                for (let i=0;i<segmentKeys.length-1;i++){\r\n                    z[i][i] = 1\r\n                    for (let j=i+1;j<segmentKeys.length;j++){\r\n                        let xlen = p[i].length;\r\n                        let ylen = p[j].length;\r\n                        let coor = xlen<ylen?pearson(p[i],p[j]):pearson(p[j],p[i]);\r\n                        z[i][j] = Math.abs(coor);\r\n                        z[j][i] = z[i][j];\r\n                        if (z[i][j]>1)\r\n                            debugger\r\n                        annotations.push({\r\n                            xref: 'x1',\r\n                            yref: 'y1',\r\n                            x: segmentKeys[j],\r\n                            y: segmentKeys[i],\r\n                            text: Math.round(coor*100)/100,\r\n                            font: {\r\n                                color: 'white'\r\n                            },\r\n                            showarrow: false,\r\n                        })\r\n                    }\r\n                }\r\n\r\n                const traceData = [\r\n                    {\r\n                        type: 'heatmap',\r\n                        name: dimensionKey,\r\n                        x: segmentKeys,\r\n                        y: segmentKeys,\r\n                        z,\r\n                        zauto:false,\r\n                        zmin:0,\r\n                        zmax:1,\r\n                        hoverongaps: false,\r\n                        showscale:false,\r\n                    }\r\n                ]\r\n\r\n                setPlotdata(traceData)\r\n\r\n                const layout = {...initLayout,\r\n                    annotations\r\n                };\r\n\r\n\r\n                setLayout(layout)\r\n            }catch(e){\r\n                setPlotdata([])\r\n            }\r\n        });\r\n    },[dimensionKey,data]);\r\n\r\n    // console.log(JSON.stringify(spec.data.values))\r\n    return (<Plot data={plotdata} style={{width: '100%',height:'100%'}} layout={layout} useResizeHandler={true}/>)\r\n\r\n}\r\n\r\nexport default Chart;\r\n\r\nfunction distance(a,b){\r\n    return Math.sqrt((a[1]-b[1])*(a[1]-b[1])+(a[0]-b[0])*(a[0]-b[0]));\r\n}\r\n\r\n\r\n// https://gist.github.com/matt-west/6500993\r\n// function pearson (x, y) {\r\n//     const promedio = l => l.reduce((s, a) => s + a, 0) / l.length\r\n//     const calc = (v, prom) => Math.sqrt(v.reduce((s, a) => (s + a * a), 0) - n * prom * prom)\r\n//     let n = x.length\r\n//     let nn = 0\r\n//     for (let i = 0; i < n; i++, nn++) {\r\n//         if ((!x[i] && x[i] !== 0) || (!y[i] && y[i] !== 0)) {\r\n//             nn--\r\n//             continue\r\n//         }\r\n//         x[nn] = x[i]\r\n//         y[nn] = y[i]\r\n//     }\r\n//     if (n !== nn) {\r\n//         x = x.splice(0, nn)\r\n//         y = y.splice(0, nn)\r\n//         n = nn\r\n//     }\r\n//     const prom_x = promedio(x), prom_y = promedio(y)\r\n//     return Math.min(1,(x\r\n//             .map((e, i) => ({ x: e, y: y[i] }))\r\n//             .reduce((v, a) => v + a.x * a.y, 0) - n * prom_x * prom_y\r\n//     ) / (calc(x, prom_x) * calc(y, prom_y)))\r\n// }\r\n\r\n/**\r\n * calculates pearson correlation\r\n * @param {number[]} d1\r\n * @param {number[]} d2\r\n */\r\nexport function pearson(d1, d2) {\r\n    let { min, pow, sqrt } = Math\r\n    let add = (a, b) => a + b\r\n    let n = min(d1.length, d2.length)\r\n    if (n === 0) {\r\n        return 0\r\n    }\r\n    [d1, d2] = [d1.slice(0, n), d2.slice(0, n)]\r\n    let [sum1, sum2] = [d1, d2].map(l => l.reduce(add))\r\n    let [pow1, pow2] = [d1, d2].map(l => l.reduce((a, b) => a + pow(b, 2), 0))\r\n    let mulSum = d1.map((n, i) => n * d2[i]).reduce(add)\r\n    let dense = sqrt((pow1 - pow(sum1, 2) / n) * (pow2 - pow(sum2, 2) / n))\r\n    if (dense === 0) {\r\n        return 0\r\n    }\r\n    return (mulSum - (sum1 * sum2 / n)) / dense\r\n}","import Plot from \"react-plotly.js\";\r\nimport {useEffect, useState, useTransition} from \"react\";\r\nimport {min as d3min, max as d3max} from 'd3';\r\n\r\n\r\nconst initData=[];\r\nconst layout={title:{text:'',pad:0},margin:{t:10,l:50,b:20,r:30}, height:150,violinmode: 'group',boxmode: 'group'}\r\nconst ViolinChart = ({data=initData,getArr,getName,dimensionKeys,domain,mode='violin'})=>{\r\n    const [isPending,startTransition] = useTransition();\r\n    const [plotdata,setPlotdata] = useState(initData);\r\n    const [domainR,setDomainR] = useState([]);\r\n    useEffect(()=> {\r\n        startTransition(() => {\r\n            const x = [];\r\n            const y = {};\r\n            dimensionKeys.forEach((k)=> {\r\n                y[k] = [];\r\n            });\r\n            setDomainR([d3min(dimensionKeys,k=>domain[k][0])-3,d3max(dimensionKeys,k=>domain[k][1])+3]);\r\n            data.map(t=> {\r\n                const tr = getName(t);\r\n                getArr(t).forEach(d=>{\r\n                    x.push(tr);\r\n                    dimensionKeys.forEach((k,i)=>{\r\n                        y[k].push(d[k])\r\n                    })\r\n                })\r\n            });\r\n            const traceData = dimensionKeys.map(k=>{\r\n                return ({\r\n                    type: mode,\r\n                    x,\r\n                    y: y[k],\r\n                    legendgroup: k,\r\n                    scalegroup: k,\r\n                    name: k,\r\n                    points: 'none',\r\n                    box: {\r\n                        visible: true\r\n                    },\r\n                    // line: {\r\n                    //     color: 'blue',\r\n                    // },\r\n                    meanline: {\r\n                        visible: true\r\n                    }\r\n                })\r\n            })\r\n            setPlotdata(traceData)\r\n        })\r\n    },[data,dimensionKeys,mode]);\r\n    const _layout={...layout,\r\n        yaxis:{\r\n            autorange:false,\r\n            range:domainR,\r\n        },\r\n    }\r\n\r\n    return (<Plot className={`violin_${mode}`} data={plotdata} style={{width: '100%',height:'100%'}} layout={_layout} useResizeHandler={true}/>)\r\n}\r\nexport default ViolinChart","import {useSelector} from \"react-redux\";\r\nimport {\r\n    selectDatas\r\n} from \"../../store/actions/dataProcess\";\r\nimport {gridSpacing} from \"../../store/constant\";\r\nimport {Card, Grid, Typography, Box, Autocomplete, TextField, Stack, MenuItem, ToggleButton} from \"@mui/material\";\r\nimport {lazy, useEffect, useState} from \"react\";\r\nimport {groups,extent as d3extent,min as d3min, max as d3max} from \"d3\";\r\n\r\n// dashboard routing\r\n// const LineChart = Loadable(lazy(() => import('../../components/viz/lineChart')));\r\n// const RibbonChart = Loadable(lazy(() => import('../../components/viz/Ribbon')));\r\nimport LineChart from \"../../components/viz/lineChart\";\r\nimport LineCharts from \"../../components/viz/lineChart/index_combine\";\r\n// import LineChart from \"../../components/viz/lineChart/subplots\";\r\nimport RibbonChart from \"../../components/viz/Ribbon\";\r\nimport SplomChart from \"../../components/viz/Splom\";\r\nimport PCAChart from \"../../components/viz/PCA\";\r\nimport PCAChart2 from \"../../components/viz/PCA/index_reverse\";\r\nimport SimChart from \"../../components/viz/similarity\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport ViolinChart from \"../../components/viz/violinChart\";\r\n\r\nconst mapName={\"power_usage\":\"Power Usage (W)\",\r\n    index: \"Sample\",\r\n    voltage: \"Voltage (mV)\",\r\n    \"edge_temperature\": \"Edge Temp ('C)\",\r\n    \"memory_temperature\": \"Mem Temp ('C)\",\r\n    \"juntion_temperature\":\"Junction Temp ('C)\",\r\n    \"sclk\":\"GPU Frequency (MHz)\",\r\n    \"gpu_usage\":\"GPU Usage (%)\",\r\n    \"memory_usage\":\"Mem Usage (%)\"}\r\n\r\n\r\n// fix this later\r\nconst Viz = ()=>{\r\n    const datas = useSelector(selectDatas);\r\n    const [isSwap,setIsSwap] = useState(false);\r\n    const [nestData,stNestData] = useState([]);\r\n    const [dimension,setDimension] = useState([]);\r\n    const [dimensionDetail,setDimensionDetail] = useState({});\r\n    const [plotType,setPlotType] = useState('lines');\r\n    const [layout,setLayout] = useState([]);\r\n    const [axis,setAxis] = useState([{label:'x',key:\"index\"},\r\n        {label:'y',key:\"voltage\"},\r\n        {label:'z',key:null,is3D:true},\r\n        {label:'color',key:null},\r\n        {label:'dim',key:[],is3D:true},\r\n    ]);\r\n        // {key:\"gpu_usage\"}]);\r\n    // need to move this in the future\r\n    function handleNestData(isSwap,datas){\r\n        const ROW = isSwap?'Profile':'AppName';\r\n        const COL = isSwap?'AppName':'Profile';\r\n        const newProfile = groups(datas,d=>d[ROW]);\r\n        const positionK = {};\r\n        const flatdata = [];\r\n        const newdata = newProfile.map(([p,pd])=>{\r\n            const app = Object.keys(positionK).map(k=>[k,[]]);\r\n            pd.forEach(d=>{\r\n                if (positionK[d[COL]]===undefined){\r\n                    positionK[d[COL]] = app.length;\r\n                    app[positionK[d[COL]]]=[d[COL],[]];\r\n                }\r\n                app[positionK[d[COL]]][1].push(d);\r\n                flatdata.push(d.data);\r\n            })\r\n            return [p,app]\r\n        })\r\n        stNestData(newdata);\r\n        return {flatdata}\r\n    }\r\n    useEffect(()=>{\r\n        const {flatdata} = handleNestData(isSwap,datas);\r\n        const dimensionDetail = {};\r\n        if (datas[0]&&datas[0].data&&datas[0].data[0]) {\r\n            let dim = Object.keys(datas[0].data[0]);\r\n            dim.forEach(k=>{\r\n                dimensionDetail[k] = [+Infinity,-Infinity];\r\n                const ex = flatdata.map(d=>d3extent(d,d=>+d[k]));\r\n                dimensionDetail[k] = [d3min(ex,d=>d[0]),d3max(ex,d=>d[1])];\r\n                if (mapName[k])\r\n                    dimensionDetail[k].label = mapName[k];\r\n            })\r\n            setDimension(dim)\r\n        }else\r\n            setDimension([]);\r\n        setDimensionDetail(dimensionDetail);\r\n    },[isSwap,datas]);\r\n\r\n\r\n    const onChangeAxis = (key,value)=>{\r\n        axis[key].key = value;\r\n        setAxis([...axis])\r\n    }\r\n    const largeLayout = ((plotType==='markers')||(plotType==='lines2')||(plotType==='violin')||(plotType==='lines')||(plotType==='Splom'));\r\n    const renderAxis = ()=>{\r\n        switch (plotType){\r\n            case 'markers':\r\n            case 'lines':\r\n                return axis.map((a,i)=><Autocomplete value={a.key} key={a.label}\r\n                                                     getOptionLabel={d=>d}\r\n                                                     size={\"small\"}\r\n                                                     sx={{minWidth:200,display:a.is3D ?'none':undefined}}\r\n                                                     options={dimension}\r\n                                                     onChange={(event, newValue) => onChangeAxis(i, newValue)}\r\n                                                     renderInput={(params) => <TextField {...params} label={a.label}/>}/>)\r\n\r\n            case 'violin':\r\n            case 'boxplot':\r\n            case 'Splom':\r\n            case 'pca':\r\n            case 'pca_2':\r\n            case 'sim':\r\n            case 'lines2':\r\n                return <Autocomplete value={axis[4].key}\r\n                                     multiple\r\n                                     getOptionLabel={d=>d}\r\n                                     size={\"small\"}\r\n                                     options={dimension}\r\n                                     onChange={(event, newValue) => onChangeAxis(4, newValue)}\r\n                                     renderInput={(params) => <TextField {...params} label={axis[4].label}/>}/>\r\n            default:\r\n                return axis.map((a,i)=><Autocomplete value={a.key} key={a.label}\r\n                                                     size={\"small\"}\r\n                                                     getOptionLabel={d=>d}\r\n                                                     sx={{minWidth:200,display:a.label==='color' ?'none':undefined}}\r\n                                                     options={dimension}\r\n                                                     onChange={(event, newValue) => onChangeAxis(i, newValue)}\r\n                                                     renderInput={(params) => <TextField {...params} label={a.label}/>}/>)\r\n        }\r\n    }\r\n    const renderPlots = ([profile,pData])=>{\r\n        switch (plotType){\r\n            case 'markers':\r\n            case 'lines':\r\n                return <Grid container>\r\n                    {pData.map(([app, appData],i) => <Grid key={`${profile} ${app}`} item xs={4}\r\n                                                           sx={{height: 200, mb: 3, paddingTop:2}}>\r\n                        <Typography variant={'h5'} textAlign={'center'}>{app}</Typography>\r\n                        {appData[0] &&\r\n                            <LineChart data={appData[0]?.data}\r\n                                       xKey={axis[0].key}\r\n                                       yKey={axis[1].key}\r\n                                       domain={dimensionDetail}\r\n                                       cKey={axis[3].key}\r\n                                       colorDomain={dimensionDetail[axis[3].key]}\r\n                                       getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                                       getName={([k,t])=>k}\r\n                                       mode={plotType}\r\n                                       showscale={i===2}\r\n                            />}\r\n                    </Grid>)}\r\n                </Grid>\r\n            case 'lines2':\r\n                return <Grid container>{axis[4].key.map(k=><Grid key={k} item xs={axis[4].key.length>1?4:12}>\r\n                        <LineCharts\r\n                            getArr={([k, t]) => t[0] ? t[0].data : []}\r\n                            getName={([k, t]) => k}\r\n                            data={pData}\r\n                            xKey={'index'}\r\n                            yKey={k}\r\n                            domain={dimensionDetail}\r\n                        />\r\n                        </Grid>)}</Grid>\r\n            case 'violin':\r\n                return <ViolinChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    domain={dimensionDetail}\r\n                    data={pData}\r\n                    mode={'violin'}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'boxplot':\r\n                return <ViolinChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    domain={dimensionDetail}\r\n                    data={pData}\r\n                    mode={'box'}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'Splom':\r\n                return <SplomChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'pca':\r\n                return <PCAChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'pca_2':\r\n                return <PCAChart2\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    dimensionKeys={axis[4].key}\r\n                />\r\n            case 'sim':\r\n                return <Grid container>\r\n                    {axis[4].key.map((d) => <Grid key={d} item xs={axis[4].key.length>1?6:12} sx={{height: 200, mb: 3}}>\r\n                        <Typography variant={'h5'} textAlign={'center'}>{d}</Typography>\r\n                        <SimChart getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                                       getName={([k,t])=>k}\r\n                                       data={pData}\r\n                                       dimensionKey={d}\r\n                            />\r\n                    </Grid>)}\r\n                </Grid>\r\n            case 'Ribbon':\r\n                return <RibbonChart\r\n                    getArr={([k,t])=>t[0]?t[0].data:[]}\r\n                    getName={([k,t])=>k}\r\n                    data={pData}\r\n                    xKey={axis[0].key}\r\n                    yKey={axis[1].key}\r\n                    zKey={axis[2].key}\r\n                    cKey={axis[3].key}\r\n                />\r\n            default:\r\n                return <>Not support yet</>\r\n        }\r\n    }\r\n    return(\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} >\r\n                <Stack spacing={2} direction={\"row\"}>\r\n                    <TextField\r\n                        select\r\n                        label=\"Plot type\"\r\n                        size=\"small\"\r\n                        sx={{minWidth:200}}\r\n                        value={plotType}\r\n                        onChange={(event)=>setPlotType(event.target.value)}\r\n                    >\r\n                        <MenuItem value={'markers'}>\r\n                            Scatter plot\r\n                        </MenuItem>\r\n                        <MenuItem value={'lines'}>\r\n                            Line chart\r\n                        </MenuItem>\r\n                        <MenuItem value={'lines2'}>\r\n                            Line chart (combine)\r\n                        </MenuItem>\r\n                        <MenuItem value={'violin'}>\r\n                            Violin chart (combine)\r\n                        </MenuItem>\r\n                        <MenuItem value={'boxplot'}>\r\n                            Box plot (combine)\r\n                        </MenuItem>\r\n                        <MenuItem value={'Ribbon'}>\r\n                            3D scatter plot\r\n                        </MenuItem>\r\n                        <MenuItem value={'Splom'}>\r\n                            Splom\r\n                        </MenuItem>\r\n                        <MenuItem value={'pca'}>\r\n                            PCA\r\n                        </MenuItem>\r\n                        <MenuItem value={'pca_2'}>\r\n                            PCA 2\r\n                        </MenuItem>\r\n                        <MenuItem value={'sim'}>\r\n                            Similarity matrix\r\n                        </MenuItem>\r\n                    </TextField>\r\n                    <ToggleButton value=\"app_profile\" selected={isSwap} color=\"primary\"\r\n                                  onChange={()=>setIsSwap(!isSwap)}>Swap App and Profile</ToggleButton>\r\n                    {renderAxis()}\r\n\r\n                </Stack>\r\n            </Grid>\r\n            {\r\n                nestData.map(([profile,pData])=>(<Grid item key={profile} xs={largeLayout?12:6} >\r\n                    <Card>\r\n                        <Box sx={{ p: 2, pl: 2 }}>\r\n                            <Typography variant={'h3'}>{profile}</Typography>\r\n                            {\r\n                                renderPlots([profile,pData])\r\n                            }\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Viz;"],"names":["initData","layout","title","text","pad","margin","t","l","b","r","data","xKey","domain","yKey","cKey","getArr","getName","colorDomain","mode","showscale","useTransition","startTransition","useState","plotdata","setPlotdata","colordata","setColordata","useEffect","x","y","forEach","d","push","map","plotopt","type","length","marker","color","colorscale","colorbarTitleText","colorbarThickness","cmin","cmax","_layout","yaxis","label","autorange","range","xaxis","style","width","height","useResizeHandler","traceData","name","autoscale","zKey","z","useMemo","size","scene","zaxis","initLayout","hovermode","dragmode","plot_bgcolor","grid","roworder","dimensionKeys","setLayout","dimensions","k","values","line","i","axis","showline","zeroline","gridcolor","ticklen","PCA","mean","X","transpose","row","d3","dot","Y","col","v","zeros","j","sub","console","assert","w","this","scale","center","m","s","V","mul","Math","sqrt","std","pca","npc","USV","A","temp","prec","pow","tolerance","itmax","c","u","slice","n","e","q","pythag","a","abs","f","g","h","iteration","test_convergence","l1","U","S","svd","diag","pcXV","pcUdS","prod","trunc","zero","reduce","same","twomost","ipc","parseInt","DIM","dataIn","traceIndex","ti","item","matrix","pc","B","chosenPC","log","solution","dd","d3range","dim","xrange","d3extent","yrange","root","maxV","Infinity","feature","key","brand","maxi","cv","pc1","pc2","multiplyBrands","d3max","distance","contributeMax","d3sum","contribute","calculatePCA","round","shapes","x0","y0","x1","y1","annotations","xanchor","yanchor","font","segmentKeys","len","d3min","_d","segment","_matrix","di","si","seg","ticks","tickfont","ticksuffix","dimensionKey","p","coor","pearson","xref","yref","showarrow","zauto","zmin","zmax","hoverongaps","d1","d2","min","add","sum1","sum2","pow1","pow2","mulSum","dense","violinmode","boxmode","domainR","setDomainR","tr","legendgroup","scalegroup","points","box","visible","meanline","className","mapName","index","voltage","datas","useSelector","selectDatas","isSwap","setIsSwap","nestData","stNestData","dimension","setDimension","dimensionDetail","setDimensionDetail","plotType","setPlotType","is3D","setAxis","ROW","COL","newProfile","groups","positionK","flatdata","newdata","pd","app","Object","keys","undefined","handleNestData","ex","onChangeAxis","value","largeLayout","renderPlots","profile","pData","Grid","container","appData","xs","sx","mb","paddingTop","Typography","variant","textAlign","Splom","Ribbon","spacing","gridSpacing","Stack","direction","TextField","select","minWidth","onChange","event","target","MenuItem","ToggleButton","selected","Autocomplete","getOptionLabel","display","options","newValue","renderInput","params","multiple","renderAxis","Card","Box","pl"],"sourceRoot":""}