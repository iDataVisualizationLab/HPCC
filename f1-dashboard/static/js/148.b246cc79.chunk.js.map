{"version":3,"file":"static/js/148.b246cc79.chunk.js","mappings":"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","sources":["../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","../../../../home/solarch/plotly/webgl/plotly.js/node_modules/regl-splom/index.js","../node_modules/src/factory.js","../node_modules/src/react-plotly.js"],"sourcesContent":["import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;","'use strict'\n\n\nconst createScatter = require('regl-scatter2d')\nconst pick = require('pick-by-alias')\nconst getBounds = require('array-bounds')\nconst raf = require('raf')\nconst arrRange = require('array-range')\nconst rect = require('parse-rect')\nconst flatten = require('flatten-vertex-data')\n\n\nmodule.exports = SPLOM\n\n\n// @constructor\nfunction SPLOM (regl, options) {\n\tif (!(this instanceof SPLOM)) return new SPLOM(regl, options)\n\n\t// render passes\n\tthis.traces = []\n\n\t// passes for scatter, combined across traces\n\tthis.passes = {}\n\n\tthis.regl = regl\n\n\t// main scatter drawing instance\n\tthis.scatter = createScatter(regl)\n\n\tthis.canvas = this.scatter.canvas\n}\n\n\n// update & draw passes once per frame\nSPLOM.prototype.render = function (...args) {\n\tif (args.length) {\n\t\tthis.update(...args)\n\t}\n\n\tif (this.regl.attributes.preserveDrawingBuffer) return this.draw()\n\n\t// make sure draw is not called more often than once a frame\n\tif (this.dirty) {\n\t\tif (this.planned == null) {\n\t\t\tthis.planned = raf(() => {\n\t\t\t\tthis.draw()\n\t\t\t\tthis.dirty = true\n\t\t\t\tthis.planned = null\n\t\t\t})\n\t\t}\n\t}\n\telse {\n\t\tthis.draw()\n\t\tthis.dirty = true\n\t\traf(() => {\n\t\t\tthis.dirty = false\n\t\t})\n\t}\n\n\treturn this\n}\n\n\n// update passes\nSPLOM.prototype.update = function (...args) {\n\tif (!args.length) return\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tthis.updateItem(i, args[i])\n\t}\n\n\t// remove nulled passes\n\tthis.traces = this.traces.filter(Boolean)\n\n\t// FIXME: update passes independently\n\tlet passes = []\n\tlet offset = 0\n\tfor (let i = 0; i < this.traces.length; i++) {\n\t\tlet trace = this.traces[i]\n\t\tlet tracePasses = this.traces[i].passes\n\t\tfor (let j = 0; j < tracePasses.length; j++) {\n\t\t\tpasses.push(this.passes[tracePasses[j]])\n\t\t}\n\t\t// save offset of passes\n\t\ttrace.passOffset = offset\n\t\toffset += trace.passes.length\n\t}\n\n\tthis.scatter.update(...passes)\n\n\treturn this\n}\n\n\n// update trace by index, not supposed to be called directly\nSPLOM.prototype.updateItem = function (i, options) {\n\tlet { regl } = this\n\n\t// remove pass if null\n\tif (options === null) {\n\t\tthis.traces[i] = null\n\t\treturn this\n\t}\n\n\tif (!options) return this\n\n\tlet o = pick(options, {\n\t\tdata: 'data items columns rows values dimensions samples x',\n\t\tsnap: 'snap cluster',\n\t\tsize: 'sizes size radius',\n\t\tcolor: 'colors color fill fill-color fillColor',\n\t\topacity: 'opacity alpha transparency opaque',\n\t\tborderSize: 'borderSizes borderSize border-size bordersize borderWidth borderWidths border-width borderwidth stroke-width strokeWidth strokewidth outline',\n\t\tborderColor: 'borderColors borderColor bordercolor stroke stroke-color strokeColor',\n\t\tmarker: 'markers marker shape',\n\t\trange: 'range ranges databox dataBox',\n\t\tviewport: 'viewport viewBox viewbox',\n\t\tdomain: 'domain domains area areas',\n\t\tpadding: 'pad padding paddings pads margin margins',\n\t\ttranspose: 'transpose transposed',\n\t\tdiagonal: 'diagonal diag showDiagonal',\n\t\tupper: 'upper up top upperhalf upperHalf showupperhalf showUpper showUpperHalf',\n\t\tlower: 'lower low bottom lowerhalf lowerHalf showlowerhalf showLowerHalf showLower'\n\t})\n\n\t// we provide regl buffer per-trace, since trace data can be changed\n\tlet trace = (this.traces[i] || (this.traces[i] = {\n\t\tid: i,\n\t\tbuffer: regl.buffer({\n\t\t\tusage: 'dynamic',\n\t\t\ttype: 'float',\n\t\t\tdata: new Uint8Array()\n\t\t}),\n\t\tcolor: 'black',\n\t\tmarker: null,\n\t\tsize: 12,\n\t\tborderColor: 'transparent',\n\t\tborderSize: 1,\n\t\tviewport:  rect([regl._gl.drawingBufferWidth, regl._gl.drawingBufferHeight]),\n\t\tpadding: [0, 0, 0, 0],\n\t\topacity: 1,\n\t\tdiagonal: true,\n\t\tupper: true,\n\t\tlower: true\n\t}))\n\n\n\t// save styles\n\tif (o.color != null) {\n\t\ttrace.color = o.color\n\t}\n\tif (o.size != null) {\n\t\ttrace.size = o.size\n\t}\n\tif (o.marker != null) {\n\t\ttrace.marker = o.marker\n\t}\n\tif (o.borderColor != null) {\n\t\ttrace.borderColor = o.borderColor\n\t}\n\tif (o.borderSize != null) {\n\t\ttrace.borderSize = o.borderSize\n\t}\n\tif (o.opacity != null) {\n\t\ttrace.opacity = o.opacity\n\t}\n\tif (o.viewport) {\n\t\ttrace.viewport = rect(o.viewport)\n\t}\n\tif (o.diagonal != null) trace.diagonal = o.diagonal\n\tif (o.upper != null) trace.upper = o.upper\n\tif (o.lower != null) trace.lower = o.lower\n\n\t// put flattened data into buffer\n\tif (o.data) {\n\t\ttrace.buffer(flatten(o.data))\n\t\ttrace.columns = o.data.length\n\t\ttrace.count = o.data[0].length\n\n\t\t// detect bounds per-column\n\t\ttrace.bounds = []\n\n\t\tfor (let i = 0; i < trace.columns; i++) {\n\t\t\ttrace.bounds[i] = getBounds(o.data[i], 1)\n\t\t}\n\t}\n\n\t// add proper range updating markers\n\tlet multirange\n\tif (o.range) {\n\t\ttrace.range = o.range\n\t\tmultirange = trace.range && typeof trace.range[0] !== 'number'\n\t}\n\n\tif (o.domain) {\n\t\ttrace.domain = o.domain\n\t}\n\tlet multipadding = false\n\tif (o.padding != null) {\n\t\t// multiple paddings\n\t\tif (Array.isArray(o.padding) && o.padding.length === trace.columns && typeof o.padding[o.padding.length - 1] === 'number') {\n\t\t\ttrace.padding = o.padding.map(getPad)\n\t\t\tmultipadding = true\n\t\t}\n\t\t// single padding\n\t\telse {\n\t\t\ttrace.padding = getPad(o.padding)\n\t\t}\n\t}\n\n\t// create passes\n\tlet m = trace.columns\n\tlet n = trace.count\n\n\tlet w = trace.viewport.width\n\tlet h = trace.viewport.height\n\tlet left = trace.viewport.x\n\tlet top = trace.viewport.y\n\tlet iw = w / m\n\tlet ih = h / m\n\n\ttrace.passes = []\n\n\tfor (let i = 0; i < m; i++) {\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tif (!trace.diagonal && j === i) continue\n\t\t\tif (!trace.upper && i > j) continue\n\t\t\tif (!trace.lower && i < j) continue\n\n\t\t\tlet key = passId(trace.id, i, j)\n\n\t\t\tlet pass = this.passes[key] || (this.passes[key] = {})\n\n\t\t\tif (o.data) {\n\t\t\t\tif (o.transpose) {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j, count: n, stride: m},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i, count: n, stride: m}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j * n, count: n},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i * n, count: n}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpass.bounds = getBox(trace.bounds, i, j)\n\t\t\t}\n\n\t\t\tif (o.domain || o.viewport || o.data) {\n\t\t\t\tlet pad = multipadding ? getBox(trace.padding, i, j) : trace.padding\n\t\t\t\tif (trace.domain) {\n\t\t\t\t\tlet [lox, loy, hix, hiy] = getBox(trace.domain, i, j)\n\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + lox * w + pad[0],\n\t\t\t\t\t\ttop + loy * h + pad[1],\n\t\t\t\t\t\tleft + hix * w - pad[2],\n\t\t\t\t\t\ttop + hiy * h - pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t// consider auto-domain equipartial\n\t\t\t\telse {\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + j * iw + iw * pad[0],\n\t\t\t\t\t\ttop + i * ih + ih * pad[1],\n\t\t\t\t\t\tleft + (j + 1) * iw - iw * pad[2],\n\t\t\t\t\t\ttop + (i + 1) * ih - ih * pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (o.color) pass.color = trace.color\n\t\t\tif (o.size) pass.size = trace.size\n\t\t\tif (o.marker) pass.marker = trace.marker\n\t\t\tif (o.borderSize) pass.borderSize = trace.borderSize\n\t\t\tif (o.borderColor) pass.borderColor = trace.borderColor\n\t\t\tif (o.opacity) pass.opacity = trace.opacity\n\n\t\t\tif (o.range) {\n\t\t\t\tpass.range = multirange ? getBox(trace.range, i, j) : trace.range || pass.bounds\n\t\t\t}\n\n\t\t\ttrace.passes.push(key)\n\t\t}\n\t}\n\n\treturn this\n}\n\n\n// draw all or passed passes\nSPLOM.prototype.draw = function (...args) {\n\tif (!args.length) {\n\t\tthis.scatter.draw()\n\t}\n\telse {\n\t\tlet idx = []\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t// draw(0, 2, 5) - draw traces\n\t\t\tif (typeof args[i] === 'number' ) {\n\t\t\t\tlet { passes, passOffset } = this.traces[args[i]]\n\t\t\t\tidx.push(...arrRange(passOffset, passOffset + passes.length))\n\t\t\t}\n\t\t\t// draw([0, 1, 2 ...], [3, 4, 5]) - draw points\n\t\t\telse if (args[i].length) {\n\t\t\t\tlet els = args[i]\n\t\t\t\tlet { passes, passOffset } = this.traces[i]\n\t\t\t\tpasses = passes.map((passId, i) => {\n\t\t\t\t\tidx[passOffset + i] = els\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.scatter.draw(...idx)\n\t}\n\n\treturn this\n}\n\n\n// dispose resources\nSPLOM.prototype.destroy = function () {\n\tthis.traces.forEach(trace => {\n\t\tif (trace.buffer && trace.buffer.destroy) trace.buffer.destroy()\n\t})\n\tthis.traces = null\n\tthis.passes = null\n\n\tthis.scatter.destroy()\n\n\treturn this\n}\n\n\n// return pass corresponding to trace i- j- square\nfunction passId (trace, i, j) {\n\tlet id = (trace.id != null ? trace.id : trace)\n\tlet n = i\n\tlet m = j\n\tlet key = id << 16 | (n & 0xff) << 8 | m & 0xff\n\n\treturn key\n}\n\n\n// return bounding box corresponding to a pass\nfunction getBox (items, i, j) {\n\tlet ilox, iloy, ihix, ihiy, jlox, jloy, jhix, jhiy\n\tlet iitem = items[i], jitem = items[j]\n\n\tif (iitem.length > 2) {\n\t\tilox = iitem[0]\n\t\tihix = iitem[2]\n\t\tiloy = iitem[1]\n\t\tihiy = iitem[3]\n\t}\n\telse if (iitem.length) {\n\t\tilox = iloy = iitem[0]\n\t\tihix = ihiy = iitem[1]\n\t}\n\telse {\n\t\tilox = iitem.x\n\t\tiloy = iitem.y\n\t\tihix = iitem.x + iitem.width\n\t\tihiy = iitem.y + iitem.height\n\t}\n\n\tif (jitem.length > 2) {\n\t\tjlox = jitem[0]\n\t\tjhix = jitem[2]\n\t\tjloy = jitem[1]\n\t\tjhiy = jitem[3]\n\t}\n\telse if (jitem.length) {\n\t\tjlox = jloy = jitem[0]\n\t\tjhix = jhiy = jitem[1]\n\t}\n\telse {\n\t\tjlox = jitem.x\n\t\tjloy = jitem.y\n\t\tjhix = jitem.x + jitem.width\n\t\tjhiy = jitem.y + jitem.height\n\t}\n\n\treturn [ jlox, iloy, jhix, ihiy ]\n}\n\n\nfunction getPad (arg) {\n\tif (typeof arg === 'number') return [arg, arg, arg, arg]\n\telse if (arg.length === 2) return [arg[0], arg[1], arg[0], arg[1]]\n\telse {\n\t\tlet box = rect(arg)\n\t\treturn [box.x, box.y, box.x + box.width, box.y + box.height]\n\t}\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n  'WebGlContextLost',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n","import plotComponentFactory from './factory';\nimport Plotly from 'plotly.js/dist/plotly';\n\nconst PlotComponent = plotComponentFactory(Plotly);\n\nexport default PlotComponent;\n"],"names":["value","ref","React","current","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","pageSize","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","parentElement","contains","document","activeElement","useAutocomplete","props","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledProp","disabled","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","isOptionEqualToValue","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","readOnly","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","name","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","value1","every","val","previousHighlightedOption","checkHighlightedOptionExists","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","undefined","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","overridesResolver","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","inProps","useThemeProps","className","component","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","autocompleteClasses","tag","inputRoot","visibility","width","margin","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","outlinedInputClasses","right","paddingTop","filledInputClasses","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","endAdornment","AutocompleteClearIndicator","IconButton","clearIndicator","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","mainChannel","selectedOpacity","alpha","hoverOpacity","focusOpacity","AutocompleteGroupLabel","ListSubheader","groupLabel","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","slotProps","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2","getToggleButtonUtilityClass","ToggleButtonRoot","ButtonBase","selectedColorChannel","selectedColor","primaryChannel","button","borderRadius","shape","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","disableFocusRipple","focusRipple","defaultPrevented","const","__webpack_modules__","__unused_webpack_module","Lib","__webpack_require__","let","module","__unused_webpack_exports","exports","passes","Plotly","factory","PlotlyComponent","_inherits","_classCallCheck","_this","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","this","then","_this2","unmounting","el","Error","react","data","layout","frames","err","onError","onInitialized","prevProps","numPrevFrames","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","isBrowser","window","removeEventListener","removeUpdateEvents","purge","removeListener","updateEvents","forEach","updateEvent","_this3","on","_this4","callback","_transitionData","_frames","invoke","useResizeHandler","Plots","resize","_this5","addEventListener","debug","gd","eventNames","eventName","prop","_this6","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","_react","divId","Component","propTypes","PropTypes","arrayOf","object","number","func","bool","defaultProps"],"sourceRoot":""}